(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{418:function(t,a,s){"use strict";s.r(a);var e=s(17),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"静态代码分析工具clang-tidy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态代码分析工具clang-tidy"}},[t._v("#")]),t._v(" 静态代码分析工具Clang-Tidy")]),t._v(" "),a("h2",{attrs:{id:"基本介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[t._v("#")]),t._v(" 基本介绍")]),t._v(" "),a("p",[a("code",[t._v("clang-tidy")]),t._v(" 是一个基于 clang 的 C++ “linter” 工具。其作用主要是用来检查和修正代码中的典型编程问题，像代码风格/接口误用/通过静态分析可定位到的"),a("code",[t._v("bug")]),t._v("。"),a("code",[t._v("clang-tidy")]),t._v("模块化功能做的很好，有预留接口，非常便于实现新的代码检查功能。")]),t._v(" "),a("h2",{attrs:{id:"安装clang-tidy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装clang-tidy"}},[t._v("#")]),t._v(" 安装"),a("code",[t._v("clang-tidy")])]),t._v(" "),a("p",[t._v("直接编译安装"),a("code",[t._v("LLVM")]),t._v("工程，包含子工程构建，编译安装的"),a("code",[t._v("bin")]),t._v("路径下有"),a("code",[t._v("clang-tidy")]),t._v("工具。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://foobarweb.net/langs/cpp/LLVM.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LLVM编译安装的详细步骤可以参考这里"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"使用clang-tidy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用clang-tidy"}},[t._v("#")]),t._v(" 使用"),a("code",[t._v("clang-tidy")])]),t._v(" "),a("p",[a("code",[t._v("clang-tidy")]),t._v(" 是一个基于 "),a("code",[t._v("LibTooling")]),t._v(" 的工具，如果您为项目设置编译命令数据库，则使用起来会更容易（有关如何执行此操作的示例，请参阅如何为 "),a("code",[t._v("LLVM")]),t._v(" 设置工具）。源码对应的编译命令数据库保存在"),a("code",[t._v("compile-command.json")]),t._v("文件中，这个文件中其实保存的是每个可执行文件的构建命令，现在很多工具可以自动生成这个文件，例如对于使用"),a("code",[t._v("CMake")]),t._v("管理的工程，只需要在编译的时候带上参数"),a("code",[t._v("cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON")]),t._v("即可在"),a("code",[t._v("build")]),t._v("目录下生成"),a("code",[t._v("compile-command.json")]),t._v("文件，在执行"),a("code",[t._v(".clang-tidy")]),t._v("命令时设置"),a("code",[t._v("-p={project}/build")]),t._v("即可。")]),t._v(" "),a("p",[t._v("可以在命令行添加"),a("code",[t._v("--")]),t._v("符号，以不使用编译命令而时使用编译选项来定制检测规则，用来实现单个文件的格式检测：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("clang-tidy test.cpp -- -Imy_project/include "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-DMY_DEFINES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("p",[a("code",[t._v("-I")]),t._v("参数指定要包含的头文件路径")]),t._v(" "),a("p",[a("code",[t._v("clang-tidy")]),t._v("有其自己的检测器，也可以使用"),a("code",[t._v("Clang")]),t._v("的静态分析器，每一项检测都有其自己的名字，使用"),a("code",[t._v("-checks")]),t._v("参数可以指定要进行哪些检测，它指定了逗号分隔的正向和反向规则，正向规则指定了要添加的检测子集，反向规则指定了要移除的规则。示例：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("clang-tidy "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-checks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-*,modernize-*'")]),t._v(" test.cpp --\n")])])]),a("ul",[a("li",[a("code",[t._v("-checks")]),t._v("指定要进行哪些检测，"),a("code",[t._v("-*")]),t._v("表示移除所有检测，"),a("code",[t._v("modernize-*")]),t._v("表示保留"),a("code",[t._v("modernize")]),t._v("开头的所有检测。"),a("code",[t._v("-checks")]),t._v("支持的参数有：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("code",[t._v("checks")]),t._v("名称前缀")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("abseil-")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Google Abseil")]),t._v("相关的检测")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("altera-")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("针对"),a("code",[t._v("FPGA")]),t._v("的"),a("code",[t._v("OpenCL")]),t._v("相关的检测")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("android-")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Android")]),t._v("相关检测")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boost-")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Boost")]),t._v("库相关检测")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("clang-analyzer-")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Clang Static Analyzer")]),t._v("检测")])])])]),t._v(" "),a("p",[t._v("更多检测名称前缀参考:")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://clang.llvm.org/extra/clang-tidy/index.html#using-clang-tidy",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.https://clang.llvm.org/extra/clang-tidy/index.html#using-clang-tidy"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"配置文件和格式文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件和格式文件"}},[t._v("#")]),t._v(" 配置文件和格式文件")]),t._v(" "),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("p",[a("code",[t._v("clang-tidy")]),t._v("提供了一个配置文件，可以指定要使用的检测器、检测器的参数等。配置文件使用"),a("code",[t._v("YAML")]),t._v("语法编写，一般放在当前工程目录下，文件名为"),a("code",[t._v(".clang-tidy")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定要使用的检测器")]),t._v("\nChecks: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-*,modernize-*,performance-*'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定检测器的参数")]),t._v("\nCheckOptions:\n  - key: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'modernize-use-nullptr.NullPtrBeforeZero'")]),t._v("\n    value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n")])])]),a("h3",{attrs:{id:"格式文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式文件"}},[t._v("#")]),t._v(" 格式文件")]),t._v(" "),a("p",[a("code",[t._v("clang-tidy")]),t._v("命令的"),a("code",[t._v("--format-style=")]),t._v("参数，需要"),a("code",[t._v(".clang-format")]),t._v("文件作为参数来设置修复格式化代码的样式。")]),t._v(" "),a("p",[a("code",[t._v("--format-style=")]),t._v("可选的值有：")]),t._v(" "),a("ul",[a("li",[t._v("'none'，默认值，关闭格式化")]),t._v(" "),a("li",[t._v("'file'，设置此值"),a("code",[t._v("clang-tidy")]),t._v("会使用最近父目录下的"),a("code",[t._v(".clang-format")]),t._v("文件来设置格式化的样式")]),t._v(" "),a("li",[t._v("'{ "),a("json",[t._v(" }'指定格式化选项，例如:"),a("code",[t._v("-format-style='{BasedOnStyle: llvm, IndentWidth: 8}'")])])],1),t._v(" "),a("li",[t._v("'llvm', 'google', 'webkit', 'mozilla'")])]),t._v(" "),a("p",[t._v("一个简单的"),a("code",[t._v(".clang-format")]),t._v("文件的内容：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("Language:        Cpp\nAccessModifierOffset: "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-2")]),t._v("\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nAlignConsecutiveDeclarations: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nAlignEscapedNewlinesLeft: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nAlignOperands: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用配置文件和格式化文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用配置文件和格式化文件"}},[t._v("#")]),t._v(" 使用配置文件和格式化文件")]),t._v(" "),a("p",[t._v("对于单个文件，通过命令行可以直接来运行:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("clang-tidy -format-style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),t._v(" -config-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".clang-tidy "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/build/debug test_clang.cpp\n")])])]),a("p",[t._v("对于工程中有很多文件，写成"),a("code",[t._v("shell")]),t._v("脚本的形式为:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" project_dir\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("project_dir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rev-parse --show-toplevel"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project_dir")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" srcs\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("srcs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-files src crossdock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-E")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'thrift-gen|Test\\.cpp'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-E")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\.cpp$'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" cmd\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("src")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$srcs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("cmd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clang-tidy -p=build"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("cmd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" -checks='),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("-clang-diagnostic-unused-command-line-argument"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(' "')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("cmd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$src")]),t._v('"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cmd")]),t._v('"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("eval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cmd")]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmain\n")])])]),a("h2",{attrs:{id:"在代码中设置排除clang-tidy检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在代码中设置排除clang-tidy检测"}},[t._v("#")]),t._v(" 在代码中设置排除"),a("code",[t._v("clang-tidy")]),t._v("检测")]),t._v(" "),a("p",[t._v("对于工程中的代码，有时候可以确认代码是正常的，但是不满足"),a("code",[t._v("clang-tidy")]),t._v("的规则，这个时候需要增加设置使目标代码免除检测。")]),t._v(" "),a("p",[t._v("通用抑制检测的机制：")]),t._v(" "),a("ul",[a("li",[t._v("对于一行，使用"),a("code",[t._v("NOLINT")]),t._v("注释：")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINT")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("下一行免除检测")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINTNEXTLINE")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("设置一段代码免除检测")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINTBEGIN")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINTEND")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面的"),a("code",[t._v("NOLINT")]),t._v("注释后可以接参数，设置具体要避免哪些规则的检测：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINTBEGIN(google*)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINT(*-avoid-c-arrays)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOLINTEND(google*)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" reference")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://clang.llvm.org/extra/clang-tidy/index.html#using-clang-tidy",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.https://clang.llvm.org/extra/clang-tidy/index.html#using-clang-tidy"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);