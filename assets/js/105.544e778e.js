(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{421:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("致谢：参考自"),a("a",{attrs:{href:"https://github.com/gavinliu6/CMake-Practice-zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("<Cmake 实践 Cmake Practice -- Cjacker.pdf>"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_1-简单例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简单例子"}},[t._v("#")]),t._v(" 1.简单例子")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PROJECT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TEST_CPP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Source Dir: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Source Dir: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("TEST_CPP_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Binary Dir: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Binary Dir: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("TEST_CPP_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SRC_LIST main.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_EXECUTABLE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("SRC_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("PROJECT")]),t._v("指令，"),a("code",[t._v("PROJECT(projectname [CXX] [C] [Java])")])]),t._v(" "),a("ul",[a("li",[t._v("隐式定义了两个cmake变量"),a("code",[t._v("<projectname>_BINARY_DIR")]),t._v("和"),a("code",[t._v("<projectname>_SOURCE_DIR")])]),t._v(" "),a("li",[a("code",[t._v("cmake")]),t._v("系统也预定义了"),a("code",[t._v("PROJECT_BINARY_DIR")]),t._v("和"),a("code",[t._v("PROJECT_SOURCE_DIR")])]),t._v(" "),a("li",[t._v("建议使用"),a("code",[t._v("PROJECT_SOURCE_DIR")]),t._v("，避免修改工程名称导致错误")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("SET")]),t._v("指令，"),a("code",[t._v("SET(VAR [VALUE] [CACHE TYPE DOCSTRING [FORCE]])")]),t._v("，SET 指令可以用来显式的定义变量。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("MESSAGE 指令")])]),t._v(" "),a("ul",[a("li",[t._v("格式"),a("code",[t._v('MESSAGE([SEND_ERROR | STATUS | FATAL_ERROR] "message to display" ...)')])]),t._v(" "),a("li",[t._v("用于向终端输出用户定义的信息,"),a("code",[t._v("SATUS ，输出前缀为 -- 的信息")]),t._v(", "),a("code",[t._v("FATAL_ERROR，立即终止所有 cmake 过程.")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ADD_EXECUTABLE")]),t._v("的指令，格式："),a("code",[t._v("ADD_EXECUTABLE(main ${SRC_LIST})")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("${}")]),t._v("来引用变量，这是 "),a("code",[t._v("cmake")]),t._v("的变量应用方式，但是，有一些例外，比"),a("br"),t._v("\n如在 IF 控制语句，变量是直接使用变量名引用，而不需要"),a("code",[t._v("${}")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("指令是大小写无关的，参数和变量是大小写相关的")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-管理工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-管理工程"}},[t._v("#")]),t._v(" 2.管理工程")]),t._v(" "),a("p",[t._v("工程目录")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("├── CMakeLists.txt\n├── COPYRIGHT.md\n├── doc\n├── README.md\n├── run.sh\n└── src\n    ├── CMakeLists.txt\n    └── main.cpp\n")])])]),a("p",[a("code",[t._v("src")]),t._v("文件中的"),a("code",[t._v("CMakeLists.txt")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ADD_EXECUTABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main main.c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("project")]),t._v("中的"),a("code",[t._v("CMakeLists.txt")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("PROJECT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nADD_SUBDIRECTORY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("构建完成后，会发现生成的目标文件 "),a("code",[t._v("main")]),t._v(" 位于 build/bin 目录中")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("ADD_SUBDIRECTORY 指令")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("格式:ADD_SUBDIRECTORY(source_dir [binary_dir] [EXCLUDE_FROM_ALL])")])]),t._v(" "),a("li",[t._v("该指令用于向当前工程添加存放源文件的子目录，并可以指定中间二进制和目标二进制存放的位置。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("换个地方保存目标二进制")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)")])]),t._v(" "),a("li",[a("code",[t._v("SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)")])]),t._v(" "),a("li",[t._v("上面两个指令分别定义了可执行二进制的输出路径为 "),a("code",[t._v("build/bin")]),t._v(" 和库的输出路径为 "),a("code",[t._v("build/lib")])]),t._v(" "),a("li",[t._v("在哪里"),a("code",[t._v("ADD_EXECUTABLE")]),t._v("或"),a("code",[t._v("ADD_LIBRARY")]),t._v("，如果需要改变目标存放路径，就在哪里加入上述的定义。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("INSTALL")]),t._v("命令和"),a("code",[t._v("CMAKE_INSTALL_PREFIX")]),t._v("变量")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("INSTALL")]),t._v("指令用于定义安装规则，安装的内容可以包括目标二进制、动态库、静态库以及文件、目录、脚本等。")])]),t._v(" "),a("li",[a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS targets...\n    [[ARCHIVE|LIBRARY|RUNTIME]\n        [DESTINATION <dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n        [PERMISSIONS permissions...]\n        [CONFIGURATIONS\n        [Debug|Release|...]]\n        [COMPONENT <component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n        [OPTIONAL]\n    ] [...]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("TARGETS")])]),t._v(" 后面跟的就是我们通过 "),a("code",[t._v("ADD_EXECUTABLE")]),t._v(" 或者 "),a("code",[t._v("ADD_LIBRARY")]),t._v(" 定义的目标文件，可能是可执行二进制、动态库、静态库。")])]),t._v(" "),a("li",[a("p",[t._v("目标类型就相对应的有三种："),a("code",[t._v("ARCHIVE 特指静态库")]),t._v(","),a("code",[t._v("LIBRARY 特指动态库")]),t._v(","),a("code",[t._v("RUNTIME特指可执行目标二进制")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("DESTINATION")])]),t._v(" 定义了安装的路径，如果路径以"),a("code",[t._v("/")]),t._v("开头，那么指的是绝对路径，这时候"),a("code",[t._v("CMAKE_INSTALL_PREFIX")]),t._v(" 其实就无效了。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("安装普通文件")]),t._v("：默认权限"),a("code",[t._v("644")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES files... DESTINATION <dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    [PERMISSIONS permissions...]\n    [CONFIGURATIONS [Debug|Release|...]]\n    [COMPONENT <component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n    [RENAME <name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("] [OPTIONAL]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("非目标文件的可执行程序安装(比如脚本之类):")]),t._v(" 与普通文件安装的区别是，默认权限"),a("code",[t._v("755")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PROGRAMS files... DESTINATION <dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    [PERMISSIONS permissions...]\n    [CONFIGURATIONS [Debug|Release|...]]\n    [COMPONENT <component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n    [RENAME <name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("] [OPTIONAL]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("安装目录：")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DIRECTORY dirs... DESTINATION <dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    [FILE_PERMISSIONS permissions...]\n    [DIRECTORY_PERMISSIONS permissions...]\n    [USE_SOURCE_PERMISSIONS]\n    [CONFIGURATIONS [Debug|Release|...]]\n    [COMPONENT <component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n    [[PATTERN <pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" | REGEX <regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n    [EXCLUDE] [PERMISSIONS permissions...]] [...]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("DIRECTORY 后面连接的是所在 Source 目录的相对路径,"),a("code",[t._v("abc")]),t._v(" 和 "),a("code",[t._v("abc/")]),t._v("有很大的区别,一个是把"),a("code",[t._v("abc")]),t._v("文件夹安装到"),a("code",[t._v("DESTINATION")]),t._v("路径下，一个是将"),a("code",[t._v("abc/")]),t._v("目录下的所有文件及目录安装到"),a("code",[t._v("DEST``路径下。PATTERN")]),t._v(" 用于使用正则表达式进行过滤，"),a("code",[t._v("PERMISSIONS")]),t._v(" 用于指定 "),a("code",[t._v("PATTERN")]),t._v(" 过滤后的文件权限。")])]),t._v(" "),a("li",[a("p",[t._v("安装时 CMAKE 脚本的执行：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("[[SCRIPT <file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("] [CODE <code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]] [...]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("SCRIPT")]),t._v(" 参数用于在安装时调用 "),a("code",[t._v("cmake")]),t._v(" 脚本文件（也就是"),a("code",[t._v("<abc>.cmake")]),t._v(" 文件）"),a("br"),t._v(" "),a("code",[t._v("CODE")]),t._v(" 参数用于执行 "),a("code",[t._v("CMAKE")]),t._v(" 指令，必须以双引号括起来。比如："),a("br"),t._v(" "),a("code",[t._v('INSTALL(CODE "MESSAGE(\\"Sample install message.\\")")')])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("CMAKE_INSTALL_PREFIX 的默认定义是/usr/local")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_3-生成和使用共享库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-生成和使用共享库"}},[t._v("#")]),t._v(" 3.生成和使用共享库")]),t._v(" "),a("h3",{attrs:{id:"_3-1生成动态共享库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1生成动态共享库"}},[t._v("#")]),t._v(" 3.1生成动态共享库")]),t._v(" "),a("p",[a("code",[t._v("ADD_LIBRARY")]),t._v("命令")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("libname\n    ["),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("SHARED")]),t._v("|"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("STATIC")]),t._v("|MODULE]\n    ["),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("EXCLUDE_FROM_ALL")]),t._v("]\n    source1 source2 ... sourceN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("SHARED")]),t._v("动态库，"),a("code",[t._v("STATIC")]),t._v("静态库。")]),t._v(" "),a("p",[a("code",[t._v("EXCLUDE_FROM_ALL")]),t._v(" 参数的意思是这个库不会被默认构建，除非有其他的组件依赖或者手"),a("br"),t._v("\n工构建。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("STATIC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("LIBHELLO_SRC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("SHARED")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("LIBHELLO_SRC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("根据以上命令，会发现静态库没有被创建，这是因为一个 "),a("code",[t._v("target")]),t._v(" 是不能重名的，所以，静态库构建指令无效。")]),t._v(" "),a("p",[t._v("可以修改静态库的名字，但按照一般的习惯，静态库名字跟动态库名字应该是一致的，这样就需要用到另外一个指令，"),a("code",[t._v("SET_TARGET_PROPERTIES")]),t._v("，其基本语法为：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET_TARGET_PROPERTIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target1 target2 ...\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" prop1 value1 prop2 value2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("添加一句")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET_TARGET_PROPERTIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello_static "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("OUTPUT_NAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就可以同时得到 libhello.so/libhello.a 两个库了。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cmake 在构建一个新的 target 时，会尝试清理掉其他使用这个名字的库,为了回避这个问题，做如下配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET_TARGET_PROPERTIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" CLEAN_DIRECT_OUTPUT "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET_TARGET_PROPERTIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello_static "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" CLEAN_DIRECT_OUTPUT\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 动态库版本号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# VERSION 指代动态库版本，SOVERSION 指代 API 版本。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET_TARGET_PROPERTIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("SOVERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("INSTALL")]),t._v("共享库和头文件，")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS hello hello_staticLIBRARY DESTINATION lib ARCHIVE DESTINATION lib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INSTALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES hello.h DESTINATION include/hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("静态库要使用 "),a("code",[t._v("ARCHIVE")]),t._v(" 关键字。")]),t._v(" "),a("h2",{attrs:{id:"_3-2引用库文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2引用库文件"}},[t._v("#")]),t._v(" 3.2引用库文件")]),t._v(" "),a("p",[a("strong",[t._v("设置头文件路径")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("INCLUDE_DIRECTORIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("[AFTER|BEFORE] [SYSTEM] dir1 dir2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这条指令可以用来向工程添加多个特定的头文件搜索路径，路径之间用空格分割，如果路径"),a("br"),t._v("\n中包含了空格，可以使用双引号将它括起来，默认的行为是追加到当前的头文件搜索路径的"),a("br"),t._v("\n后面，你可以通过两种方式来进行控制搜索路径添加的方式：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("CMAKE_INCLUDE_DIRECTORIES_BEFORE")]),t._v("，通过 SET 这个 cmake 变量为 on，可以将添加的头文件搜索路径放在已有路径的前面")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("AFTER")]),t._v(" 或者 "),a("code",[t._v("BEFORE")]),t._v(" 参数，也可以控制是追加还是置前")])]),t._v(" "),a("p",[a("strong",[t._v("设置库文件路径")]),t._v("，引入两个新的指令"),a("br"),t._v(" "),a("code",[t._v("LINK_DIRECTORIES")]),t._v("和 "),a("code",[t._v("TARGET_LINK_LIBRARIES")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TARGET_LINK_LIBRARIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target library1 <debug | optimized"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" library2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("为 target 添加需要链接的共享库。")]),t._v(" "),a("p",[a("strong",[t._v("CMAKE_INCLUDE_PATH 和 CMAKE_LIBRARY_PATH")]),t._v("这两个是环境变量而不是 "),a("code",[t._v("cmake")]),t._v(" 变量。使用方法是要在 "),a("code",[t._v("bash")]),t._v(" 中用 "),a("code",[t._v("export")]),t._v(" 或者在 "),a("code",[t._v("csh")]),t._v(" 中使用 "),a("code",[t._v("set")]),t._v(" 命令设置或者"),a("code",[t._v("CMAKE_INCLUDE_PATH=/home/include cmake ..")]),t._v("等方式。")]),t._v(" "),a("p",[a("strong",[t._v("FIND_PATH 用来在指定路径中搜索文件名")]),t._v(",比如：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PATH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myHeader NAMES hello.h PATHS /usr/include /usr/include/hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myHeader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("INCLUDE_DIRECTORIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("myHeader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myHeader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-其他"}},[t._v("#")]),t._v(" 4.其他")]),t._v(" "),a("h3",{attrs:{id:"_4-1环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1环境变量"}},[t._v("#")]),t._v(" 4.1环境变量")]),t._v(" "),a("ul",[a("li",[t._v("获取环境变量：")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENV_PATH $"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("ENV")]),t._v("{PATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("ENV_PATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("设置环境变量")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("ENV")]),t._v("{变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-2系统信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2系统信息"}},[t._v("#")]),t._v(" 4.2系统信息")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("CMAKE_MAJOR_VERSION")]),t._v("，CMAKE 主版本号，比如 2.4.6 中的 2")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_MINOR_VERSION")]),t._v("，CMAKE 次版本号，比如 2.4.6 中的 4")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_PATCH_VERSION")]),t._v("，CMAKE 补丁等级，比如 2.4.6 中的 6")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_SYSTEM")]),t._v("系统名称")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_SYSTEM_NAME")]),t._v("不包含版本的系统名")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_SYSTEM_VERSION")]),t._v("系统版本")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_SYSTEM_PROCESSOR")]),t._v("处理器名称")]),t._v(" "),a("li",[a("code",[t._v("UNIX")]),t._v("在所有的类 "),a("code",[t._v("UNIX")]),t._v(" 平台为 "),a("code",[t._v("TRUE")]),t._v("，包括 "),a("code",[t._v("OS X")]),t._v(" 和 "),a("code",[t._v("cygwin")])]),t._v(" "),a("li",[a("code",[t._v("WIN32")]),t._v("在所有的 "),a("code",[t._v("win32")]),t._v(" 平台为 "),a("code",[t._v("TRUE")]),t._v("，包括 "),a("code",[t._v("cygwin")])])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake Major Version: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_MAJOR_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake Minor Version: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_MINOR_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake Patch Version: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_PATCH_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake System: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_SYSTEM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake System Name: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_SYSTEM_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake System Version: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_SYSTEM_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMake System Processor: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_SYSTEM_PROCESSOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UNIX: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("UNIX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WIN32: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("WIN32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake Major Version: 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake Minor Version: 16")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake Patch Version: 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake System: Linux-5.15.0-56-generic")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake System Name: Linux")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake System Version: 5.15.0-56-generic")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CMake System Processor: x86_64")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# UNIX: 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WIN32: ")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-3-主要的开关选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-主要的开关选项"}},[t._v("#")]),t._v(" 4.3 主要的开关选项")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BUILD_SHARED_LIBS")]),t._v("，这个开关用来控制默认的库编译方式，如果不进行设置，使用 "),a("code",[t._v("ADD_LIBRARY")]),t._v(" 并没有指定库类型的情况下，默认编译生成的库都是静态库。如果 "),a("code",[t._v("SET(BUILD_SHARED_LIBS ON)")]),t._v("后，默认生成的为动态库。")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_C_FLAGS")]),t._v(":设置 "),a("code",[t._v("C")]),t._v("编译选项，也可以通过指令 "),a("code",[t._v("ADD_DEFINITIONS()")]),t._v("添加。")]),t._v(" "),a("li",[a("code",[t._v("CMAKE_CXX_FLAGS")]),t._v("设置 "),a("code",[t._v("C++")]),t._v("编译选项，也可以通过指令 "),a("code",[t._v("ADD_DEFINITIONS()")]),t._v("添加。")])]),t._v(" "),a("h2",{attrs:{id:"_5-常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-常用指令"}},[t._v("#")]),t._v(" 5.常用指令")]),t._v(" "),a("h3",{attrs:{id:"_5-1add-definitions-向c-c-编译器添加-d定义-比如"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1add-definitions-向c-c-编译器添加-d定义-比如"}},[t._v("#")]),t._v(" 5.1"),a("code",[t._v("ADD_DEFINITIONS")]),t._v("，向"),a("code",[t._v("C/C++")]),t._v("编译器添加"),a("code",[t._v("-D")]),t._v("定义，比如:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OPTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENABLE_DEBUG "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Build the project using macro"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("OFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENABLE_DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_DEFINITIONS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-DENABLE_DEBUG -DABC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENABLE_DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("如果代码中定义了")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("ENABLE_DEBUG ")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("这个代码块就会生效。"),a("br"),t._v("\n如果要添加其他的编译器开关，可以通过 CMAKE_C_FLAGS 变量和 CMAKE_CXX_FLAGS 变"),a("br"),t._v("\n量设置。")]),t._v(" "),a("h2",{attrs:{id:"_5-2-add-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-add-dependencies"}},[t._v("#")]),t._v(" 5.2 "),a("strong",[t._v("ADD_DEPENDENCIES")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ADD_DEPENDENCIES")]),t._v("，定义 "),a("code",[t._v("target")]),t._v(" 依赖的其他 "),a("code",[t._v("target")]),t._v("，确保在编译本 "),a("code",[t._v("target")]),t._v(" 之前，其他的 "),a("code",[t._v("target")]),t._v(" 已经被构建。")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_DEPENDENCIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target-name depend-target1 depend-target2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-3-aux-source-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-aux-source-directory"}},[t._v("#")]),t._v(" 5.3 "),a("strong",[t._v("AUX_SOURCE_DIRECTORY")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("AUX_SOURCE_DIRECTORY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dir")]),t._v(" VARIABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("作用是发现一个目录下所有的源代码文件并将列表存储在一个变量中，这个指令临时被用来"),a("br"),t._v("\n自动构建源文件列表。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AUX_SOURCE_DIRECTORY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(". SRC_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADD_EXECUTABLE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("SRC_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-4-exec-program"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-exec-program"}},[t._v("#")]),t._v(" 5.4 "),a("code",[t._v("EXEC_PROGRAM")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("CMakeLists.txt")]),t._v(" 处理过程中执行命令，并不会在生成的 "),a("code",[t._v("Makefile")]),t._v(" 中执行。具体语法"),a("br"),t._v("\n为：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EXEC_PROGRAM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Executable [directory in which to run]\n    [ARGS <arguments to executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n    [OUTPUT_VARIABLE <var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]\n    [RETURN_VALUE <var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("用于在指定的目录运行某个程序，通过 ARGS 添加参数，如果要获取输出和返回值，可通过"),a("br"),t._v(" "),a("code",[t._v("OUTPUT_VARIABLE")]),t._v(" 和 "),a("code",[t._v("RETURN_VALUE")]),t._v(" 分别定义两个变量."),a("br"),t._v("\n这个指令可以帮助你在 "),a("code",[t._v("CMakeLists.txt")]),t._v(" 处理过程中支持任何命令，比如根据系统情况去"),a("br"),t._v("\n修改代码文件等等。")]),t._v(" "),a("p",[a("strong",[t._v("例如")]),t._v(":在 "),a("code",[t._v("src")]),t._v(" 目录执行 "),a("code",[t._v("ls")]),t._v(" 命令，并把结果和返回值存下来")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EXEC_PROGRAM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ls ARGS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.c"')]),t._v(" OUTPUT_VARIABLE LS_OUTPUT RETURN_VALUE LS_RVALUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not LS_RVALUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ls result: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("LS_OUTPUT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not LS_RVALUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-5文件操作指令file-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5文件操作指令file-指令"}},[t._v("#")]),t._v(" 5.5文件操作指令"),a("code",[t._v("FILE 指令")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WRITE filename "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message to write"')]),t._v("... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND filename "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message to write"')]),t._v("... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("READ filename variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GLOB expressions]..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" variable [RELATIVE path] [globbing]..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GLOB_RECURSE variable [RELATIVE path] [globbing expressions]..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REMOVE [directory]..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REMOVE_RECURSE [directory]..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MAKE_DIRECTORY [directory]..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RELATIVE_PATH variable directory file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TO_CMAKE_PATH path result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TO_NATIVE_PATH path result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-6-include指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-include指令"}},[t._v("#")]),t._v(" 5.6 "),a("strong",[t._v("INCLUDE指令")])]),t._v(" "),a("p",[t._v("用来载入 "),a("code",[t._v("CMakeLists.txt")]),t._v(" 文件，也用于载入预定义的 "),a("code",[t._v("cmake")]),t._v(" 模块。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INCLUDE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file1 [OPTIONAL]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INCLUDE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module [OPTIONAL]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("OPTIONAL")]),t._v(" 参数的作用是文件不存在也不会产生错误。可以指定载入一个文件，如果定义的是一个模块，那么将在 "),a("code",[t._v("CMAKE_MODULE_PATH")]),t._v(" 中搜索这个模块并载入。载入的内容将在处理到 "),a("code",[t._v("INCLUDE")]),t._v(" 语句是直接执行。")]),t._v(" "),a("h3",{attrs:{id:"_5-7-find-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-find-指令"}},[t._v("#")]),t._v(" 5.7 "),a("strong",[t._v("FIND_指令")])]),t._v(" "),a("p",[a("code",[t._v("FIND_")]),t._v("系列指令主要包含一下指令：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<VAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name1 path1 path2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("VAR")]),t._v(" 变量代表找到的文件全路径，包含文件名。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<VAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name1 path1 path2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("VAR")]),t._v(" 变量表示找到的库全路径，包含库文件名。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PATH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<VAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name1 path1 path2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("VAR")]),t._v(" 变量代表包含这个文件的路径。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PROGRAM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<VAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" name1 path1 path2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("VAR")]),t._v(" 变量代表包含这个程序的全路径。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PACKAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [major.minor] [QUIET] [NO_MODULE] [[REQUIRED|COMPONENTS] [componets...]]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("用来调用预定义在 "),a("code",[t._v("CMAKE_MODULE_PATH")]),t._v(" 下的 "),a("code",[t._v("Find<name>.cmake")]),t._v("模块，你也可以自己定义 "),a("code",[t._v("Find<name>")]),t._v("模块，通过 "),a("code",[t._v("SET(CMAKE_MODULE_PATH dir)")]),t._v("将其放入工程的某个目录中供工程使用。")]),t._v(" "),a("p",[a("strong",[t._v("例如")])]),t._v(" "),a("p",[t._v("在编译的时候需要使用"),a("code",[t._v("curl")]),t._v("库，需要添加 "),a("code",[t._v("curl")]),t._v(" 的头文件路径和库文件:")]),t._v(" "),a("ul",[a("li",[t._v("方法1:直接通过"),a("code",[t._v("INCLUDE_DIRECTORIES")]),t._v(" 和 "),a("code",[t._v("TARGET_LINK_LIBRARIES")]),t._v("指令添加")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("INCLUDE_DIRECTORIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/usr/include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TARGET_LINK_LIBRARIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curltest curl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("方法2: 使用 "),a("code",[t._v("cmake")]),t._v(" 提供的 "),a("code",[t._v("FindCURL")]),t._v(" 模块")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PACKAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CURL_FOUND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("INCLUDE_DIRECTORIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("CURL_INCLUDE_DIR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TARGET_LINK_LIBRARIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curltest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("CURL_LIBRARY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ELSE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CURL_FOUND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FATAL_ERROR ”CURL library not found”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CURL_FOUND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("系统预定义的 "),a("code",[t._v("Find<name>.cmake")]),t._v(" 模块，使用方法一般如上例所示,每一个模块都会定义以下几个变量")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<name>_FOUND")]),t._v("，来判断模块是否被找到，如果没有找到，按照工程的需要关闭某些特性、给出提醒或者中止编译")]),t._v(" "),a("li",[a("code",[t._v("<name>_INCLUDE_DIR or <name>_INCLUDES")])]),t._v(" "),a("li",[a("code",[t._v("<name>_LIBRARY or TARGET_LINK_LIBRARIES")])])]),t._v(" "),a("p",[a("code",[t._v("FIND_PACKAGE")]),t._v("有两种查找模式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一种是"),a("code",[t._v("Module")]),t._v("模式，在这种模式下"),a("code",[t._v("cmake")]),t._v("会查找"),a("code",[t._v("Find<PackageName>.cmake")]),t._v("文件，"),a("code",[t._v("Find<PackageName>.cmake")]),t._v("的查找路径是先在工程指定的"),a("code",[t._v("CMAKE_MODULE_PATH")]),t._v("，然后再去"),a("code",[t._v("cmake")]),t._v("安装路径下查找，如"),a("code",[t._v("/usr/share/cmake-3.16/Modules/")]),t._v("路径。"),a("code",[t._v("Find<PackageName>.cmake")]),t._v("不一定是对应的库工程中自带的，有可能是外部生成的，如系统、cmake、甚至是调用库的工程。")])]),t._v(" "),a("li",[a("p",[t._v("另一种是"),a("code",[t._v("Config")]),t._v("模式，在这种模式下，"),a("code",[t._v("CMake")]),t._v("或找寻"),a("code",[t._v("<lowercasePackageName>-config.cmake")]),t._v("或者"),a("code",[t._v("<PackageName>Config.cmake")]),t._v("文件，如果"),a("code",[t._v("version")]),t._v("信息指定后，其也会搜寻"),a("code",[t._v("<lowercasePackageName>-config-version.cmake")]),t._v("或者"),a("code",[t._v("<PackageName>ConfigVersion.cmake")]),t._v("。"),a("code",[t._v("Config")]),t._v("搜寻模式搜寻路径比"),a("code",[t._v("Module")]),t._v("模式要复杂，"),a("code",[t._v("config")]),t._v("和"),a("code",[t._v("version")]),t._v("文件通常会作为包安装的一部分，因此可以认为这种模式比"),a("code",[t._v("Module")]),t._v("要靠谱。"),a("code",[t._v("Config")]),t._v("搜寻模式会从变量"),a("code",[t._v("<PackageName>_DIR")]),t._v("中找寻"),a("code",[t._v(".cmake")]),t._v("文件，譬如在"),a("code",[t._v("find_package(OpenCV)")]),t._v("中可以在上一行定义"),a("code",[t._v("set(OpenCV_DIR xxx/opencv/build/)")]),t._v("。如果"),a("code",[t._v("<PackageName>_DIR")]),t._v("中没有"),a("code",[t._v("Config.cmake")]),t._v("文件，将会跳过"),a("code",[t._v("<PackageName>_DIR")]),t._v("继续在默认路径中查找。")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("查找路径")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}})])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("<prefix>/(lib/<arch>_or_lib*share)/cmake/<name>*/")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("<prefix>/(lib/<arch>_or_lib*_or_share)/<name>*/")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("<prefix>/(lib/<arch>_or_lib*_or_share)/<name>*/(cmake|CMake)/")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("p",[t._v("如"),a("code",[t._v("OpenCV")]),t._v("默认安装后会在一下目录生成"),a("code",[t._v("Config.cmake")]),t._v("文件：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/lib/x86_64-linux-gnu/cmake/opencv4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── OpenCVConfig.cmake\n├── OpenCVConfig-version.cmake\n├── OpenCVModules.cmake\n└── OpenCVModules-release.cmake\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/local/share/OpenCV")]),t._v("\n├── OpenCVConfig.cmake\n├── OpenCVConfig-version.cmake\n├── OpenCVModules.cmake\n└── OpenCVModules-release.cmake\n")])])]),a("p",[t._v("通过"),a("code",[t._v("<PackageName>_CONFIG")]),t._v("变量，可以查看使用的是哪个"),a("code",[t._v("Config.cmake")]),t._v(","),a("br"),t._v("\n如：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCV_CONFIG: '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OpenCV_CONFIG}")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-- OpenCV_CONFIG: /usr/local/share/OpenCV/OpenCVConfig.cmake\n")])])]),a("p",[a("a",{attrs:{href:"https://cmake.org/cmake/help/latest/command/find_package.html#search-modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考自"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("自定义cmake模块")])]),t._v(" "),a("p",[t._v("如前面，自定义共享库，并安装到指定目录，当想在"),a("code",[t._v("cmake")]),t._v("中通过"),a("code",[t._v("find_package")]),t._v("命令找到并使用时，需要自定义"),a("code",[t._v("Find<NAME>.cmake")]),t._v("模块。")]),t._v(" "),a("p",[t._v("自定义"),a("code",[t._v("cmake/FindHELLO.cmake")]),t._v("模块:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PATH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_INCLUDE_DIR hello.h /media/lx/data/code/test_cpp/hello/hello/include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_LIBRARY hello /media/lx/data/code/test_cpp/hello/hello/lib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_INCLUDE_DIR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" HELLO_LIBRARY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_FOUND "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_INCLUDE_DIR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" HELLO_LIBRARY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_FOUND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" HELLO_FIND_QUIETLY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found Hello: '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("HELLO_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" HELLO_FIND_QUIETLY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_FOUND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_FIND_REQUIRED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FATAL_ERROR "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Could not find hello library"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_FIND_REQUIRED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDIF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HELLO_FOUND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("FIND_PATH")]),t._v("和"),a("code",[t._v("FIND_LIBRARY")]),t._v("后面所跟的是头文件和库文件的安装路径。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# FIND_PACKAGE命令格式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIND_PACKAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [major.minor] [QUIET] [NO_MODULE] [[REQUIRED|COMPONENTS] [componets...]]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("FIND_PACKAGE")]),t._v("的"),a("code",[t._v("QUIET")]),t._v(" 参数，对应与我们编写的 "),a("code",[t._v("FindHELLO")]),t._v(" 中的 "),a("code",[t._v("HELLO_FIND_QUIETLY")]),t._v("，如果不指定这个参数，就会执行：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found Hello: '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("HELLO_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("REQUIRED")]),t._v(" 参数，其含义是指这个共享库是否是工程必须的，如果使用了这个参数，说明这个链接库是必备库，如果找不到这个链接库，则工程不能编译。对应于"),a("code",[t._v("FindHELLO.cmake")]),t._v(" 模块中的 "),a("code",[t._v("HELLO_FIND_REQUIRED")]),t._v(" 变量。")]),t._v(" "),a("p",[t._v("同样，在上面的模块中定义了 "),a("code",[t._v("HELLO_FOUND")]),t._v(","),a("br"),t._v(" "),a("code",[t._v("HELLO_INCLUDE_DIR")]),t._v(","),a("code",[t._v("HELLO_LIBRARY")]),t._v(" 变量供开发者在 "),a("code",[t._v("FIND_PACKAGE")]),t._v(" 指令中使用。")]),t._v(" "),a("h3",{attrs:{id:"_5-8控制指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-8控制指令"}},[t._v("#")]),t._v(" 5.8控制指令")]),t._v(" "),a("ul",[a("li",[t._v("IF指令")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果变量不是：空，0，N, NO, OFF, FALSE, NOTFOUND 或 <var>_NOTFOUND 时，表达式为真。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" var "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与上述条件相反")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" var2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当两个变量都为真是为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" var2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当两个变量其中一个为真时为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("COMMAND cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当给定的 cmd 确实是命令并可以调用是为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXISTS dir/file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当目录名或者文件名存在时为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file1 IS_NEWER_THAN file2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当 file1 比 file2 新，或者 file1/file2 其中有一个不存在时为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IS_DIRECTORY dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当 dirname 是目录时，为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当给定的变量或者字符串能够匹配正则表达式 `regex` 时为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("MATCHES")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("MATCHES")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数字比较表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LESS")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LESS")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("GREATER")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("GREATER")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("EQUAL")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("EQUAL")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按照字母序的排列进行比较")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("STRLESS")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("STRLESS")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("STRGREATER")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("STRGREATER")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("STREQUAL")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("STREQUAL")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果变量被定义，为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("DEFINED")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("strong",[t._v("WHILE 指令")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("WHILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COMMAND1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGS ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COMMAND2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGS ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDWHILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("真假判断条件可以参考 "),a("code",[t._v("IF")]),t._v(" 指令。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("FOREACH")])])])]),t._v(" "),a("p",[a("code",[t._v("FOREACH")]),t._v(" 指令的使用方法有三种形式")]),t._v(" "),a("p",[a("strong",[t._v("列表")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop_var arg1 arg2 ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COMMAND1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGS ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COMMAND2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGS ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDFOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop_var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("如:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AUX_SOURCE_DIRECTORY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(". SRC_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("SRC_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDFOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("范围")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop_var RANGE total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDFOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop_var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("从 0 到 total 以１为步进")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VAR RANGE "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("VAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDFOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("范围和步进")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop_var RANGE start stop [step]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDFOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop_var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("从 "),a("code",[t._v("start")]),t._v(" 开始到 "),a("code",[t._v("stop")]),t._v(" 结束，以 "),a("code",[t._v("step")]),t._v(" 为步进。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A RANGE "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MESSAGE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENDFOREACH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_6-list指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-list指令"}},[t._v("#")]),t._v(" 6.LIST指令")]),t._v(" "),a("p",[a("code",[t._v("cmake")]),t._v("中的"),a("code",[t._v("list")]),t._v("变量是用分号"),a("code",[t._v(";")]),t._v("分隔的一组字符串。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var a b c d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nforeach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${var}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${F}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nendforeach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- b")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- d")]),t._v("\n")])])]),a("p",[t._v("LIST指令是为CMAKE中的列表执行的一系列操作，命令使用格式为：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subcommand <list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [args...]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("subcommand")]),t._v("是待执行的子命令,"),a("code",[t._v("<list>")]),t._v("是待操作的列表变量，"),a("code",[t._v("[args...]")]),t._v("是对"),a("code",[t._v("<list>")]),t._v("执行操作"),a("code",[t._v("subcommand")]),t._v("所需要的参数。")]),t._v(" "),a("p",[a("code",[t._v("list")]),t._v("其所支持的子命令有：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("LENGTH")]),t._v(" 获取"),a("code",[t._v("list")]),t._v("中元素个数")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LENGTH var len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${len}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("APPEND")]),t._v(" 往"),a("code",[t._v("list")]),t._v("中追加元素")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND var "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("GET")]),t._v(" 获取"),a("code",[t._v("list")]),t._v("中指定id的元素")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GET var "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("JOIN")]),t._v("用连接字符串将"),a("code",[t._v("list")]),t._v("中元素连接起来，返回字符串")]),t._v(" "),a("li",[a("code",[t._v("SUBLIST")]),t._v("用于获取列表中的一部分（子列表）")]),t._v(" "),a("li",[a("code",[t._v("FIND")]),t._v("用于查找列表是否存在指定的元素")]),t._v(" "),a("li",[a("code",[t._v("FILTER")]),t._v("用于根据正则表达式包含或排除列表中的元素")]),t._v(" "),a("li",[a("code",[t._v("INSERT")]),t._v("用于在指定位置将元素")]),t._v(" "),a("li",[a("code",[t._v("REVERSE")]),t._v("将整个列表反转")]),t._v(" "),a("li",[a("code",[t._v("SORT")]),t._v("用于对列表进行排序")]),t._v(" "),a("li",[a("code",[t._v("TRANSFORM")]),t._v("对list中的每个元素，或根据条件选中的元素近进行变换")])]),t._v(" "),a("h2",{attrs:{id:"_7-macro和function的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-macro和function的定义"}},[t._v("#")]),t._v(" 7.macro和function的定义")]),t._v(" "),a("p",[t._v("这是两个相似的关键字，都是创建一段有名字的代码以供稍后调用。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("marco")]),t._v("定义的格式")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("macro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<macro_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [arg1 arg2 ...]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("command1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("command2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endmacro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<macro_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("function")]),t._v("定义的格式")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("macro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<fucntion_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [arg1 arg2 ...]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("command1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("command2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endmacro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("<fucntion_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("从上面可以看到，两者的定义格式基本相同。")]),t._v(" "),a("p",[t._v("定义一个名为"),a("code",[t._v("name")]),t._v("的"),a("code",[t._v("macro")]),t._v("或者"),a("code",[t._v("function")]),t._v(", "),a("code",[t._v("arg1...")]),t._v("传入的是参数，除了使用"),a("code",[t._v("${arg1}")]),t._v("来引用变量外，系统还自定义一些特殊的变量(大写)：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("变量")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ARGV#")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("#是一个下标，例如ARGV0指向第一个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ARGV")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("所有定义时要求传入的参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ARGN")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("定义时要求传入的参数以外的参数，譬如定义宏（函数）时，要求输入1个参数，实际输入了3个，则剩下的两个会以数组形式存储在ARGN中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ARGC")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("实际传入参数的个数")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("macro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo arg1 arg2 arg3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is arg1: ${arg1}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is arg2: ${arg2}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is arg3: ${arg3}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is argc: ${ARGC}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is argn: ${ARGN}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is argv: ${ARGV}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND v  $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("arg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND v  $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("arg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND v  $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("arg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list v: ${v}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg IN LISTS v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is in macro ${arg}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endforeach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endmacro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is arg1: 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is arg2: 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is arg3: 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is argc: 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is argn: 4;5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is argv: 1;2;3;4;5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- list v: 1;2;2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in macro 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in macro 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in macro 2 ")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("macro")]),t._v("和"),a("code",[t._v("function")]),t._v("的不同\n"),a("ul",[a("li",[t._v("宏的"),a("code",[t._v("ARGN")]),t._v("、"),a("code",[t._v("ARGV")]),t._v("等参数不是通常"),a("code",[t._v("CMake")]),t._v("意义上的变量。 它们是字符串替换，很像C预处理器对宏的处理。所以在宏中打印"),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg IN LISTS ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is in macro ${arg}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endforeach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),t._v("时，是没有输出的。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("function")]),t._v("中打印会输出每个参数"),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg IN LISTS ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is in macro ${arg}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endforeach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in func 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in func 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in func 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in func 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- this is in func 5")]),t._v("\n")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"_8-cmake文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-cmake文件"}},[t._v("#")]),t._v(" 8."),a("code",[t._v(".cmake")]),t._v("文件")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v(".cmake")]),t._v("文件中可以定义函数"),a("code",[t._v("function")]),t._v("和"),a("code",[t._v("macro")]),t._v(",定义变量等。")]),t._v(" "),a("p",[t._v("这和其他语言中将源码分成不同的模块和头文件类似。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("CMakeLists.txt")]),t._v("文件中直接通过"),a("code",[t._v("include(xx.cmake)")]),t._v("来引用。")]),t._v(" "),a("p",[t._v("可以通过"),a("code",[t._v("include")]),t._v("包含各种格式的文件，"),a("code",[t._v(".cmake")]),t._v("后缀是一种通用格式。")]),t._v(" "),a("p",[t._v("除了给"),a("code",[t._v("cmake")]),t._v("编译代码分块外，"),a("code",[t._v(".cmake")]),t._v("文件还有个用处，在发布一个"),a("code",[t._v("library")]),t._v("时，至少需要包含一个"),a("code",[t._v("<name>Config.cmake")]),t._v("的文件，如此可以通过"),a("code",[t._v("find_package")]),t._v("的"),a("code",[t._v("Config")]),t._v("模式找到你所定义的库。")]),t._v(" "),a("p",[t._v("参考"),a("a",{attrs:{href:"https://gitlab.kitware.com/cmake/community/-/wikis/doc/tutorials/How-to-create-a-ProjectConfig.cmake-file",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to create a ProjectConfig.cmake file"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_9-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-target"}},[t._v("#")]),t._v(" 9."),a("code",[t._v("target_*")])]),t._v(" "),a("p",[a("code",[t._v("target_include_directories/target_link_libraries")]),t._v("设置目标的"),a("code",[t._v("include/link")]),t._v("时有三个属性"),a("code",[t._v("PRIVATE/PUBLIC/INTERFACE")]),t._v("，分别介绍如下，")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("PUBLIC")]),t._v(": 如果头文件和源码文件中都需要使用第三方库头文件中的内容，就设置成"),a("code",[t._v("PUBLIC")]),t._v(",使用当前库的人也需要先包含第三方库的头文件")]),t._v(" "),a("li",[a("code",[t._v("PRIVATE")]),t._v(": 如果当前库只在源码文件中包含第三方库的头文件和第三方库的实现，当前库在包含和引用第三方库时，应该设置成"),a("code",[t._v("PRIVATE")]),t._v(",这样使用当前库时不用关心第三方库，不需要包含第三方库的头文件。")]),t._v(" "),a("li",[a("code",[t._v("INTERFACE")]),t._v(",如果只是头文件包含第三方库，而源码中没有包含第三方库，应该设置成"),a("code",[t._v("INTERFACE")]),t._v(",这告诉当前库的使用者，当前库源码中没有使用第三方库，而链接了当前库的目标文件，可以直接使用第三方库头文件中的"),a("code",[t._v("API")]),t._v("而无需包含第三方库的头文件。也就是说，设置成"),a("code",[t._v("INTERFACE")]),t._v("只是声明链接当前库的目标文件可以直接使用第三方库的"),a("code",[t._v("API")]),t._v("无需再在"),a("code",[t._v("include_directories")]),t._v("中添加头文件依赖。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/26037954/cmake-target-link-libraries-interface-dependencies",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考自"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("不推荐使用"),a("code",[t._v("include_directories")]),t._v("，是因为其是全局包含，会对整个工程及其子工程的包含路径都会产生影响。")]),t._v(" "),a("h2",{attrs:{id:"_10-cmake-skip-rpath变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-cmake-skip-rpath变量"}},[t._v("#")]),t._v(" 10."),a("code",[t._v("CMAKE_SKIP_RPATH")]),t._v("变量")]),t._v(" "),a("p",[t._v("CMake中的默认变量，如果设置成"),a("code",[t._v("TRUE")]),t._v(",意味者不向"),a("code",[t._v("target")]),t._v("中设置"),a("code",[t._v("RUNPATH")]),t._v("。")]),t._v(" "),a("p",[t._v("如，在编译一个目标时会自动向其中设置动态链接库的"),a("code",[t._v("RUNPATH")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default")]),t._v("\nldd test_cmake\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux-vdso.so.1 (0x00007ffe6a7d9000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libhello-cmake.so => /xx/file/test_cmake/build/hello-cmake/libhello-cmake.so (0x00007f289b3d8000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f289b1b0000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f289afbe000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libhello.so => /xx/file/test_cmake/build/hello/libhello.so (0x00007f289afb9000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f289ae6a000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /lib64/ld-linux-x86-64.so.2 (0x00007f289b3e4000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f289ae4d000)")]),t._v("\n")])])]),a("p",[t._v("设置变量为"),a("code",[t._v("TRUE")]),t._v("时")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_SKIP_RPATH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("执行"),a("code",[t._v("ldd")]),t._v("命令查看动态链接路径")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ldd test_cmake\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux-vdso.so.1 (0x00007ffcddd3e000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libhello-cmake.so => not found")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007fdfbc2e4000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fdfbc0f2000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fdfbbfa3000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /lib64/ld-linux-x86-64.so.2 (0x00007fdfbc513000)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fdfbbf88000)")]),t._v("\n")])])]),a("p",[t._v("在这种情况下，如果要运行生成的可执行文件，需要手动设置")]),t._v(" "),a("p",[a("code",[t._v("LD_LIBRARY_PATH")]),t._v("路径，并执行"),a("code",[t._v("sudo ldconfig")]),t._v("命令生效。")]),t._v(" "),a("h2",{attrs:{id:"参考工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考工程"}},[t._v("#")]),t._v(" 参考工程")]),t._v(" "),a("p",[t._v("以上代码汇总示例工程见："),a("a",{attrs:{href:"https://gitee.com/lx_r/cmake_turorials",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/lx_r/cmake_turorials"),a("OutboundLink")],1)]),t._v(" "),a("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}}),t._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/gavinliu6/CMake-Practice-zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gavinliu6/CMake-Practice-zh-CN"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/89fb01752d6f",target:"_blank",rel:"noopener noreferrer"}},[t._v("2.https://www.jianshu.com/p/89fb01752d6f"),a("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);a.default=e.exports}}]);