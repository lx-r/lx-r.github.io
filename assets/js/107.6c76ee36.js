(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{424:function(s,a,t){"use strict";t.r(a);var e=t(17),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"conan使用指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conan使用指南"}},[s._v("#")]),s._v(" conan使用指南")]),s._v(" "),a("h2",{attrs:{id:"使用conan-包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用conan-包"}},[s._v("#")]),s._v(" 使用conan 包")]),s._v(" "),a("p",[s._v("下载示例工程")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/conan-io/examples2.git\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" examples2/tutorial/consuming_packages/simple_cmake_project\n")])])]),a("p",[s._v("上述工程会依赖"),a("code",[s._v("zlib")]),s._v(", 在使用"),a("code",[s._v("conan")]),s._v("管理包的时候，会从"),a("code",[s._v("ConanCente")]),s._v("中拉取需要的包，上述工程中包含"),a("code",[s._v("conanfile.txt")]),s._v("就是为了说明需要获取的conan包的版本信息。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nzlib/1.2.11\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("generators"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nCMakeDeps\nCMakeToolchain\n")])])]),a("p",[s._v("上面文件中,"),a("code",[s._v("[generators]")]),s._v("这一部分定义了 "),a("code",[s._v("Conan")]),s._v(" 应该使用的生成器。生成器是 Conan "),a("code",[s._v("的一个组件，它负责生成构建系统所需的文件。CMakeDeps：这是一个生成器，它会生成一个")]),s._v(" "),a("code",[s._v("conan_cmake_find_package.cmake")]),s._v(" 文件，这个文件可以用来在 CMake 项目中查找 "),a("code",[s._v("Conan")]),s._v(" 管理的包。"),a("code",[s._v("CMakeToolchain：")]),s._v("这是另一个生成器，它会生成一个 "),a("code",[s._v("conan_toolchain.cmake")]),s._v(" 文件，这个文件包含了构建项目所需的工具链配置，比如编译器设置、CMake 版本等。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan profile detect "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--force")]),s._v("\n")])])]),a("p",[s._v("上面的命令用来创建或更新一个 "),a("code",[s._v("Conan")]),s._v(" 用户配置文件"),a("code",[s._v("（profile）")]),s._v("，这个文件包含了构建环境的设置，如编译器、架构、操作系统等信息。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("detect_api: Found "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cc")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gcc- "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13.2")]),s._v(".0\ndetect_api: gcc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(", using the major as version\ndetect_api: gcc C++ standard library: libstdc++11\n\nDetected profile:\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("x86_64\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("build_type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Release\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gcc\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.cppstd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gnu17\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.libcxx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("libstdc++11\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("os")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Linux\n\nWARN: This profile is a guess of your environment, please check it.\nWARN: The output of this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" is not guaranteed to be stable and can change "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" future Conan versions.\nWARN: Use your own profile files "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" stability.\nSaving detected profile to /home/lx/.conan2/profiles/default\n")])])]),a("p",[s._v("可以使用如下命令获取"),a("code",[s._v("conan")]),s._v("的配置文件默认的路径，")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan config home\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /home/lx/.conan2")]),s._v("\n")])])]),a("p",[a("code",[s._v("profile")]),s._v("文件中包含不同的部分，"),a("code",[s._v("[settings]")]),s._v("包含了操作系统、体系结构、编译器和构建的配置，当使用"),a("code",[s._v("conan")]),s._v("指令带"),a("code",[s._v("--profile")]),s._v("参数时，相关的配置将都会从"),a("code",[s._v("profile")]),s._v("文件中读取，当不指定这个参数的时候，默认的会从"),a("code",[s._v("--profile=default")]),s._v("中读取。可以使用不同的"),a("code",[s._v("profile")]),s._v("文件来配置不同的构建设置。在"),a("code",[s._v("conan")]),s._v("命令中使用"),a("code",[s._v("--settings")]),s._v("参数可以覆盖掉"),a("code",[s._v("profile")]),s._v("中的"),a("code",[s._v("setting")]),s._v("设置。可以使用如下代码来确认"),a("code",[s._v("setting")]),s._v("参数有没有生效，")]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<cstdio>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("NDEBUG")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not debug\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("prinf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"debug\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("p",[s._v("编译的时候使用的参数如下：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" --output-folder"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("missing "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--settings")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Debug\n")])])]),a("p",[s._v("接下来将使用 "),a("code",[s._v("Conan")]),s._v(" 安装 "),a("code",[s._v("Zlib")]),s._v(" 并生成 "),a("code",[s._v("CMake")]),s._v(" 所需的文件来查找该库并构建我们的项目。我们将在文件夹 "),a("code",[s._v("build")]),s._v(" 中生成这些文件。为此，请运行：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" --output-folder"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("missing\n")])])]),a("p",[s._v("构建仓库:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("cmake "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DCMAKE_TOOLCHAIN_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("conan_toolchain.cmake "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DCMAKE_BUILD_TYPE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Release\n")])])]),a("p",[a("code",[s._v("cmake")]),s._v("中的"),a("code",[s._v("CMAKE_TOOLCHAIN_FILE")]),s._v("变量非常有用，它允许用户指定一个工具链文件，这个文件定义了构建系统的环境和编译器设置。工具链文件通常用于跨平台构建，或者当你需要自定义编译器、编译选项、链接器等设置时。")]),s._v(" "),a("h2",{attrs:{id:"将构建工具也作为conan包进行管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将构建工具也作为conan包进行管理"}},[s._v("#")]),s._v(" 将构建工具也作为conan包进行管理")]),s._v(" "),a("p",[s._v("上面的示例中使用的是系统中已经安装的cmake,有时候需要使用conan包来指定要使用的cmake版本，本节就来介绍如何使用conan来安装指定版本的cmake来进行编译系统的构建。")]),s._v(" "),a("p",[s._v("以上操作其实非常简单，只需要在"),a("code",[s._v("conanfile.txt")]),s._v("中进行指定即可，如下：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nzlib/1.2.11\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tool_requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ncmake/3.22.6\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("generators"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nCMakeDeps\nCMakeToolchain\n")])])]),a("p",[s._v("在指定"),a("code",[s._v("cmake‵版本之前，还是需要系统先有一个")]),s._v("cmake"),a("code",[s._v(",因为")]),s._v("conanfile"),a("code",[s._v("中指定的")]),s._v("cmake`版本只是指定在当前的工程中。")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("cmake")]),s._v("文件中添加一行打印使用"),a("code",[s._v("cmake")]),s._v("的版本信息：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Building with CMake version: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CMAKE_VERSION}")]),s._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("执行上述命令后，在build文件夹下将有如下文件"),a("code",[s._v("conanbuild.sh")]),s._v(",这个脚本自动调用"),a("code",[s._v("VirtualBuildEnv")]),s._v("生成器，这个脚本会设置一些环境变量如"),a("code",[s._v("$PATH")]),s._v("来指定我们的软件路径，如新安装的"),a("code",[s._v("cmake")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" conanbuild.sh  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 激活当前环境")]),s._v("\ncmake "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cmake version 3.22.6")]),s._v("\n")])])]),a("p",[s._v("同样在"),a("code",[s._v("build")]),s._v("文件夹中还有"),a("code",[s._v("deactivate_conanbuild.sh")]),s._v("文件用来恢复系统环境变量的设置，")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" deactivate_conanbuild.sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 恢复环境变量设置")]),s._v("\n")])])]),a("h2",{attrs:{id:"应用依赖设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用依赖设置"}},[s._v("#")]),s._v(" 应用依赖设置")]),s._v(" "),a("p",[s._v("默认情况下，"),a("code",[s._v("conan")]),s._v("生成目标文件使用的是静态链接的方式，通过设置"),a("code",[s._v("conan")]),s._v("的"),a("code",[s._v("--options")]),s._v("参数可以设置目标文件是静态链接还是动态链接的方式，")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" --output-folder"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("missing "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--options")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("zlib/1.2.11:shared"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("True\n")])])]),a("p",[s._v("使用上述命令的时候会在"),a("code",[s._v("build")]),s._v("目录下生成‵conanrun.sh"),a("code",[s._v("脚本设置")]),s._v("VirtualRunEnv"),a("code",[s._v("环境相关的变量，如")]),s._v("LD_LIBRARY_PATH"),a("code",[s._v("和")]),s._v("PATH`，供执行可执行文件的时候使用，如执行共享库的路径。")]),s._v(" "),a("p",[s._v("conan中"),a("code",[s._v("settings")]),s._v("和"),a("code",[s._v("options")]),s._v("的区别：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("settings")]),s._v(" 是项目范围的配置，会影响正在构建的整个项目。例如，操作系统（os）、架构（arch）和编译器（compiler）等设置，对于依赖关系图中的所有包来说，这些设置通常是相同的。")]),s._v(" "),a("li",[a("code",[s._v("options")]),s._v(" 是特定于包的配置。例如，静态或共享库不是适用于所有包的设置。有些包可能只包含头文件，而其他包可能包含数据或可执行文件。"),a("code",[s._v("shared")]),s._v(" 是一个常见的选项，但包可以定义和使用任何它们需要的选项。")])]),s._v(" "),a("h2",{attrs:{id:"使用conanfile-py"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用conanfile-py"}},[s._v("#")]),s._v(" 使用"),a("code",[s._v("conanfile.py")])]),s._v(" "),a("p",[s._v("简单场景使用"),a("code",[s._v("conanfile.txt")]),s._v("就足够了，但想更灵活的使用"),a("code",[s._v("conan")]),s._v("就需要使用"),a("code",[s._v("conanfile.py")]),s._v("了，可以在其中使用 "),a("code",[s._v("Python")]),s._v(" 代码来执行诸如动态添加需求、根据其他选项更改选项或根据需求设置选项等操作。")]),s._v(" "),a("p",[s._v("将以下"),a("code",[s._v("conanfile.txt")]),s._v("改造成"),a("code",[s._v("conanfile.py")]),s._v("文件：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# conanfile.txt")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nzlib/1.2.11\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tool_requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ncmake/3.22.6\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("generators"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nCMakeDeps\nCMakeToolchain\n")])])]),a("p",[s._v("改造成的"),a("code",[s._v("conanfile.py")]),s._v("文件如下：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("from conan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" ConanFile\n\nclass CompressorRecipe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ConanFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    settings "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"os"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compiler"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build_type"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arch"')]),s._v("\n    generators "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CMakeToolchain"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CMakeDeps"')]),s._v("\n\n    def requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        self.requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zlib/1.2.11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    def build_requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        self.tool_requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmake/3.22.6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("这个类"),a("code",[s._v("CompressorRecipe")]),s._v("继承自"),a("code",[s._v("ConanFile")]),s._v("类，这个类有不同的"),a("code",[s._v("settings/gennerators")]),s._v("配置，")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("requirements()")]),s._v("方法中调用"),a("code",[s._v("self.requires")]),s._v("方法来指定"),a("code",[s._v("zlib")]),s._v("依赖")]),s._v(" "),a("li",[a("code",[s._v("build_requirements()")]),s._v("方法中使用"),a("code",[s._v("self.tool_requires()")]),s._v("来指定编译工具等的使用")])]),s._v(" "),a("p",[s._v("其他的"),a("code",[s._v("conan build/install")]),s._v("指令的使用方式和使用"),a("code",[s._v("conanfile.txt")]),s._v("时一样不要变更。")]),s._v(" "),a("p",[s._v("在前面的示例中，每次执行 "),a("code",[s._v("conan install")]),s._v(" 命令时，我们都必须使用 "),a("code",[s._v("–output-folder")]),s._v(" 参数来定义要创建 "),a("code",[s._v("Conan")]),s._v(" 生成的文件的位置。有一种更简洁的方法来决定我们希望 "),a("code",[s._v("Conan")]),s._v(" 在哪里为构建系统生成文件，例如如果我们想要根据我们使用的 CMake 生成器的类型来设置不同的输出文件夹， 可以直接在"),a("code",[s._v("conanfile.py layout()")]),s._v("方法中定义它，并使其适用于每个平台，而无需添加更多更改。")]),s._v(" "),a("h3",{attrs:{id:"使用layout方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用layout方法"}},[s._v("#")]),s._v(" 使用layout方法")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("def layout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We make the assumption that if the compiler is msvc the")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMake generator is multi-config")]),s._v("\n    multi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" True "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self.settings.get_safe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compiler"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msvc"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" False\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" multi:\n        self.folders.generators "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" os.path.join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"generators"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self.folders.build "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),s._v("\n    else:\n        self.folders.generators "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" os.path.join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),s._v(", str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self.settings.build_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"generators"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self.folders.build "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" os.path.join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),s._v(", str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self.settings.build_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("self.folders.generators")]),s._v("，"),a("code",[s._v("layout()")]),s._v("方法中可以通过设置这个属性来指定"),a("code",[s._v("Conan")]),s._v("生成的所有辅助文件（CMake 工具链和 cmake 依赖文件）放置的文件夹")])]),s._v(" "),a("h3",{attrs:{id:"使用validate方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用validate方法"}},[s._v("#")]),s._v(" 使用"),a("code",[s._v("validate")]),s._v("方法")]),s._v(" "),a("p",[s._v("当"),a("code",[s._v("conan")]),s._v("加载"),a("code",[s._v("conanfile.py")]),s._v("文件时，还会自动执行"),a("code",[s._v("validate")]),s._v("函数，可以进行一些配置的校验。")]),s._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("validate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("os "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Macos"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"armv8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("raise")]),s._v(" ConanInvalidConfiguration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ARM v8 not supported in Macos"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"使用generate-方法从pkg中复制资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用generate-方法从pkg中复制资源"}},[s._v("#")]),s._v(" 使用"),a("code",[s._v("generate()")]),s._v("方法从"),a("code",[s._v("pkg")]),s._v("中复制资源")]),s._v(" "),a("p",[s._v("在某些场景中，"),a("code",[s._v("conan pkg")]),s._v("中包含有对使用"),a("code",[s._v("pkg")]),s._v("的人来说十分重要的文件，像配置文件/assert等，使用"),a("code",[s._v("generate()")]),s._v("方法可以将这些文件从"),a("code",[s._v("conan cache")]),s._v("中拷贝到工程文件夹中，确保所有的资源可以被正确的使用。")]),s._v(" "),a("p",[s._v("如下的示例代码功能是将"),a("code",[s._v("pkg resdirs")]),s._v("目录下的资源文件拷贝到工程"),a("code",[s._v("asserts")]),s._v("文件夹下，")]),s._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" os\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" conan "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" ConanFile\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" conan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tools"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("files "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" copy\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyProject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ConanFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy all resources from the dependency's resource directory")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# to the "assets" folder in the source directory of your project')]),s._v("\n        dep "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dependencies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dep_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cpp_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("resdirs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source_folder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("执行"),a("code",[s._v("conan install")]),s._v("命令后，所有的资源文件将会被拷贝到本地，如此就可以在本地工程中使用配置文件来构建了。")]),s._v(" "),a("h2",{attrs:{id:"交叉编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交叉编译"}},[s._v("#")]),s._v(" 交叉编译")]),s._v(" "),a("p",[s._v("譬如在"),a("code",[s._v("x86 64")]),s._v("的"),a("code",[s._v("ubuntu")]),s._v("上编译，在"),a("code",[s._v("Raspberry Pi")]),s._v("上运行。"),a("code",[s._v("conan")]),s._v("使用两个编译配置文件高的"),a("code",[s._v("profile")]),s._v("，即便对于本地编译运行的"),a("code",[s._v("conan")]),s._v("构建，也可以看做其使用了两套"),a("code",[s._v("profile")]),s._v("，如下：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("missing "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--profile:host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("someprofile "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--profile:build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default\n")])])]),a("ul",[a("li",[a("code",[s._v("profile:host")]),s._v(":这是定义构建的二进制文件将运行的平台的配置文件。对于我们的字符串压缩器应用程序，此配置文件将应用于将在 "),a("code",[s._v("Raspberry Pi")]),s._v(" 中运行的 "),a("code",[s._v("Zlib")]),s._v(" 库。")]),s._v(" "),a("li",[a("code",[s._v("profile:build")]),s._v(":这是定义将构建二进制文件的平台的配置文件。对于我们的字符串压缩器应用程序，CMake 工具将使用此配置文件，该工具将在 "),a("code",[s._v("Ubuntu Linux")]),s._v(" 计算机上对其进行编译。")])]),s._v(" "),a("p",[s._v("仅设置"),a("code",[s._v("--profile")]),s._v("参数时，等价于设置"),a("code",[s._v("profile:host")]),s._v("，"),a("code",[s._v("--profile:build")]),s._v("将使用默认配置。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build.profile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("os")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Linux\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("x86_64\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("build_type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Release\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gcc\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.cppstd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gnu14\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.libcxx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("libstdc++11\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# host.profile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("os")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Linux\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("armv7hf\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gcc\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("build_type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Release\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.cppstd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gnu14\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.libcxx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("libstdc++11\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compiler.version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("buildenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("arm-linux-gnueabihf-gcc-9\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CXX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("arm-linux-gnueabihf-g++-9\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("arm-linux-gnueabihf-ld\n")])])]),a("p",[s._v("对应的"),a("code",[s._v("conanfile.py")]),s._v("文件内容基本上不变：")]),s._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" conan "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" ConanFile\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" conan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tools"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cmake "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" cmake_layout\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CompressorRecipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ConanFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    settings "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"os"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compiler"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arch"')]),s._v("\n    generators "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CMakeToolchain"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CMakeDeps"')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("requirements")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zlib/1.2.11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build_requirements")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tool_requires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmake/3.22.6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("layout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        cmake_layout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("编译使用的命令为：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("conan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--build")]),s._v(" missing "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pr:b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pr:h")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./profiles/raspberry\n")])])]),a("p",[s._v("使用"),a("code",[s._v("file")]),s._v("命令可以查看编译生成的可执行文件的目标架构是"),a("code",[s._v("aarch64")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[s._v("#")]),s._v(" reference")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("a",{attrs:{href:"https://docs.conan.io/2/tutorial/consuming_packages.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.conan.io/2/tutorial/consuming_packages.html"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=n.exports}}]);