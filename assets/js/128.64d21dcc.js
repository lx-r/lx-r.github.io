(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{444:function(s,t,a){"use strict";a.r(t);var e=a(17),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"函数声明和class后的宏的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数声明和class后的宏的作用"}},[s._v("#")]),s._v(" 函数声明和"),t("code",[s._v("class")]),s._v("后的宏的作用")]),s._v(" "),t("h2",{attrs:{id:"问题来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题来源"}},[s._v("#")]),s._v(" 问题来源")]),s._v(" "),t("p",[s._v("在学习"),t("code",[s._v("OpenCV")]),s._v("源码的时候，经常遇到在函数声明前和"),t("code",[s._v("class")]),s._v("后面经常使用宏的情况，")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数声明前面使用的宏定义")]),s._v("\nCV_WRAP "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setVariationalRefinementAlpha")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// class后面使用的宏定义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CV_EXPORTS_W")]),s._v(" DISOpticalFlow "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" DenseOpticalFlow\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("这个是有什么样的作用呢？")]),s._v(" "),t("p",[s._v("不管这个宏的位置在哪里，它都依然是宏，在预处理阶段都会被替换成宏对应的语句。")]),s._v(" "),t("p",[s._v("所以，要看在这些位置的宏有什么用，还是要看宏对应的内容是什么。")]),s._v(" "),t("h2",{attrs:{id:"解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解释"}},[s._v("#")]),s._v(" 解释")]),s._v(" "),t("p",[s._v("出现在这些位置的宏有几个作用，")]),s._v(" "),t("ul",[t("li",[s._v("当宏中没有定义的内容时，可能只是起到标记的作用，便于在源码中识别")]),s._v(" "),t("li",[s._v("根据不同的平台，配置不同的编译选项。")])]),s._v(" "),t("p",[s._v("以上面的"),t("code",[s._v("CV_EXPORTS")]),s._v("为例，其定义的内容如下：")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[s._v("CV_EXPORTS")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("defined _WIN32 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" defined WINCE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" defined __CYGWIN__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CVAPI_EXPORTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("CV_EXPORTS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[s._v("defined __GNUC__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" __GNUC__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CVAPI_EXPORTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__APPLE__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("CV_EXPORTS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__attribute__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("visibility")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"default"')]),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])])]),t("p",[t("code",[s._v("windows")]),s._v("平台下编译器会定义"),t("code",[s._v("_WIN32")]),s._v(",识别到是"),t("code",[s._v("windows")]),s._v("平台，"),t("code",[s._v("CV_EXPORTS")]),s._v("等价于"),t("code",[s._v("__declspec(dllexport)")]),s._v("，这是告诉编译器，导出的是"),t("code",[s._v("dll")]),s._v("库，可以据此进行优化。")]),s._v(" "),t("p",[t("code",[s._v("linux")]),s._v("平台下"),t("code",[s._v("GNUC")]),s._v("编译器会定义"),t("code",[s._v("__GNUC__")]),s._v(",识别到是"),t("code",[s._v("GNUC")]),s._v("时"),t("code",[s._v("CV_EXPORTS")]),s._v("等价于"),t("code",[s._v('__attribute__((visibility ("default")))')]),s._v(",这就是告诉编译器，共享文件导出的符号可见性是"),t("code",[s._v("default")]),s._v(".")]),s._v(" "),t("p",[s._v("在Linux下动态库(.so)中，通过GCC的C++ visibility属性可以控制共享文件导出符号。在GCC 4.0及以上版本中，"),t("code",[s._v("visibility")]),s._v("属性可以应用到函数、变量、模板以及C++类。")]),s._v(" "),t("p",[s._v("限制符号可见性的原因：从动态库中尽可能少地输出符号是一个好的实践经验。输出一个受限制的符号会提高程序的模块性，并隐藏实现的细节。动态库装载和识别的符号越少，程序启动和运行的速度就越快。导出所有符号会减慢程序速度，并耗用大量内存。")]),s._v(" "),t("p",[s._v("实际中有很多可以定义的编译器优化选项，使得代码工程能支持不同的平台，设置不同的编译优化方法。")]),s._v(" "),t("p",[s._v("如一个库更新时会把某些类和函数标记为"),t("code",[s._v("deprecated")]),s._v(",就可以通过在"),t("code",[s._v("GNC")]),s._v("编译时设置"),t("code",[s._v("__attribute__((deprecated))")]),s._v("，在"),t("code",[s._v("WIN")]),s._v("下设置"),t("code",[s._v("__declspec(deprecated)")]),s._v("来实现，如下：")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("defined WIN32 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" defined _WIN32 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" defined WINCE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" defined __CYGWIN__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MACRO_MARKER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("deprecated"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[s._v("__GNUC__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" __GNUC__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")])])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MACRO_MARKER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__attribute__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("deprecated"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MACRO_MARKER")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用")]),s._v("\nMACRO_MARKER "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("constexpr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("testMacro")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),t("p",[s._v("编译的时候，就会提示"),t("code",[s._v("deprecated")]),s._v(",")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /xx/data/code/basic_cplusplus_examples/app/main.cpp:30:21: warning: ‘constexpr void test::testMacro()’ is deprecated [-Wdeprecated-declarations]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    30 |     test::testMacro();")]),s._v("\n")])])]),t("p",[s._v("其实，很多库中都会使用这种用法，如"),t("code",[s._v("TensoRT")]),s._v("中，")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//! \\brief Get the padding of the convolution. If the padding is asymmetric, the pre-padding is returned.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//! \\see setPadding()")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//! \\deprecated Superseded by getPaddingNd. Deprecated prior to TensorRT 8.0 and will be removed in 9.0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//!")]),s._v("\nTRT_DEPRECATED DimsHW "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPadding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("noexcept")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mImpl"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPadding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("更多关于编译相关的配置就要根据不同的编译器来具体学习了。")]),s._v(" "),t("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}}),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://stackoverflow.com/questions/34495206/whats-a-macro-before-a-function-or-a-class-in-c",target:"_blank",rel:"noopener noreferrer"}},[s._v("1.https://stackoverflow.com/questions/34495206/whats-a-macro-before-a-function-or-a-class-in-c"),t("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);