(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{457:function(t,s,e){"use strict";e.r(s);var a=e(17),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-c-语言处理过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-c-语言处理过程"}},[t._v("#")]),t._v(" 1.C++语言处理过程")]),t._v(" "),s("p",[s("code",[t._v("编辑")]),t._v("--\x3e "),s("code",[t._v("预处理")]),t._v(" --\x3e "),s("code",[t._v("编译")]),t._v(" --\x3e "),s("code",[t._v("汇编")]),t._v(" --\x3e "),s("code",[t._v("链接")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/cprocess.jpg",alt:""}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("编辑：")]),t._v(" 编写源代码")]),t._v(" "),s("li",[s("strong",[t._v("预处理：")]),t._v(" 预处理阶断是对源码中的预处理代码进行处理。")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 预处理文件生成.i 文件")]),t._v("\ng"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("E test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("i\n")])])]),s("ul",[s("li",[s("strong",[t._v("编译：")]),t._v(" 编译阶断是将源码处理为汇编代码")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译文件生成.s 文件")]),t._v("\ng"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("S test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o  test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s\n")])])]),s("ul",[s("li",[s("strong",[t._v("汇编:")]),t._v(" 汇编阶断是将汇编代码处理为二进制代码")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 汇编生成二进制.o文件")]),t._v("\ng"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o  test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o\n")])])]),s("ul",[s("li",[s("strong",[t._v("链接：")]),t._v(" 链接阶断将二进制代码打包成一个操作系统可以识别的可执行文件格式")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 链接生成可执行文件")]),t._v("\ng"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o  test\n")])])]),s("p",[t._v("预处理指令:")]),t._v(" "),s("p",[t._v("预处理指令不是C++语句，因此行尾不需要使用"),s("code",[t._v(";")]),t._v(",如需分行，使用反斜杠"),s("code",[t._v("\\")]),t._v("进行分割，在预处理阶段将会进行语句替换。")]),t._v(" "),s("h2",{attrs:{id:"_2-1宏定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1宏定义"}},[t._v("#")]),t._v(" 2.1宏定义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("#define")]),t._v("和"),s("code",[t._v("undef")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("MAX")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("undef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// release the macro definition")])]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("#")]),t._v("和"),s("code",[t._v("##")])])]),t._v(" "),s("p",[s("code",[t._v("#")]),t._v(" 后跟1个参数名称，在预处理阶段将被替换成被两个双引号包起来的字符串常量形式。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#define str(x) #x\ncout << str(test_test) << endl;\n")])])]),s("p",[s("code",[t._v("str(test_test)")]),t._v("将在预处理阶段被替换成"),s("code",[t._v('"test_test"')]),s("br"),t._v(" "),s("code",[t._v("##")]),t._v(" 是在预处理阶段连接两个参数，中间无空格且不带"),s("code",[t._v("“”")]),t._v(",连接的结果会被直接作为"),s("code",[t._v("C++")]),t._v("中的语句。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("glue")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("b")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("glue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-2条件包含指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2条件包含指令"}},[t._v("#")]),t._v(" 2.2条件包含指令")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("elif")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n")])])]),s("p",[s("code",[t._v("#ifdef")]),t._v("，"),s("code",[t._v("#ifndef")]),t._v("，条件编译一段代码，与"),s("code",[t._v("endif")]),t._v("一起使用，判断宏是否有定义，并不关心其值")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("N")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),s("p",[t._v("定义了"),s("code",[t._v("N")]),t._v("就定义数组"),s("code",[t._v("a")]),t._v(",未定义"),s("code",[t._v("N")]),t._v("就不定义数组"),s("code",[t._v("a")]),t._v("。"),s("code",[t._v("#ifndef")]),t._v("判断如果未定义"),s("code",[t._v("某个宏")]),t._v("就执行其中语句。头文件中经常会加上此句，防止重复引入"),s("code",[t._v(".h")]),t._v("文件导致，重复定义。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("HEADER_H")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HEADER_H")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),s("p",[s("code",[t._v("#if")]),t._v("，"),s("code",[t._v("else")]),t._v("，"),s("code",[t._v("elif")]),t._v(" 根据宏的不同的值，执行不同的操作")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("TABLE_SIZE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("undef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("TABLE_SIZE")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("TABLE_SIZE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("TABLE_SIZE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("undef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("TABLE_SIZE")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("TABLE_SIZE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("TABLE_SIZE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("undef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("TABLE_SIZE")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("TABLE_SIZE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-3-error指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-error指令"}},[t._v("#")]),t._v(" 2.3 "),s("code",[t._v("#error")]),t._v("指令")]),t._v(" "),s("p",[s("code",[t._v("#error")]),t._v("抛出编译过程中检查出来的错误信息， 打印的是其后的参数")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("A C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" compiler is required"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-4-行控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-行控制"}},[t._v("#")]),t._v(" 2.4 行控制")]),t._v(" "),s("p",[s("code",[t._v("#line")]),t._v("指令，当某行编译过程中出现异常时，定制打印错误信息"),s("br"),t._v("\n行号就是"),s("code",[t._v("#line")]),t._v("指令指定的那一行，编译器会预处理的过程会自动处理。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" #line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("43")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"declaration variable"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("43")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-5-源码包含"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-源码包含"}},[t._v("#")]),t._v(" 2.5 源码包含")]),t._v(" "),s("p",[t._v("预处理器在碰到"),s("code",[t._v("#include")]),t._v("指令时，会使用"),s("code",[t._v("include")]),t._v("的文件进行源码替换")]),t._v(" "),s("p",[t._v("头文件中经常会加上此句，防止重复引入"),s("code",[t._v(".h")]),t._v("文件导致，重复定义。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("HEADER_H")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HEADER_H")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),s("p",[t._v("两种包含方式的区别：")]),t._v(" "),s("ul",[s("li",[t._v("1.使用"),s("code",[t._v("#include <>")]),t._v("包含头文件时，系统会到默认目录（编译器和环境变量等所定义的头文件目录）查找要包含的文件，这是标准方式；")]),t._v(" "),s("li",[t._v("2.使用"),s("code",[t._v('#include ""')]),t._v("包含头文件时， 系统会先到用户当前目录（即项目目录）中查找要包含的文件，查找不到会将"),s("code",[t._v('""')]),t._v("替换成"),s("code",[t._v("<>")]),t._v("再按标准方式查找；")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<header>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),t._v(" ")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-6-pragma指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-pragma指令"}},[t._v("#")]),t._v(" 2.6 "),s("code",[t._v("#pragma")]),t._v("指令")]),t._v(" "),s("p",[s("code",[t._v("#pragma")]),t._v(" 指令和平台和所使用的"),s("code",[t._v("编译器")]),t._v("强相关,不同的平台提供不同的"),s("code",[t._v("#pragma")]),t._v("操作。")]),t._v(" "),s("p",[t._v("常用的"),s("code",[t._v("#pragma once")]),t._v(",防止某个头文件被多次"),s("code",[t._v("include")]),t._v("，"),s("code",[t._v("#ifndef，#define，#endif")]),t._v("用来防止某个宏被多次定义。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("#pragma once")]),t._v("是编译相关，就是说这个编译系统上能用，但在其他编译系统不一定可以，也就是说移植性差，不过现在基本上已经是每个编译器都有这个定义了。")]),t._v(" "),s("li",[s("code",[t._v("#ifndef")]),t._v("，"),s("code",[t._v("#define")]),t._v("，"),s("code",[t._v("#endif")]),t._v("这个是"),s("code",[t._v("C++语言")]),t._v("相关，这是"),s("code",[t._v("C++")]),t._v("语言中的宏定义，通过宏定义避免文件多次编译。所以在所有支持"),s("code",[t._v("C++")]),t._v("语言的编译器上都是有效的，如果写的程序要跨平台，最好使用这种方式")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消息文本"')]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比较常用的指令,只要在头文件的最开始加入这条指令就能够保证头文件被编译一次")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("once")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-7-c-中预定的宏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-c-中预定的宏"}},[t._v("#")]),t._v(" 2.7 "),s("code",[t._v("C++")]),t._v("中预定的宏")]),t._v(" "),s("p",[t._v("一定有的宏：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__LINE__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("编译时当前行的行号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__FILE__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("源文件名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__DATE__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("编译开始的日期，形如"),s("code",[t._v("mm dd yyyy")]),t._v(",例："),s("code",[t._v("Apr 11 2021")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__TIME__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("编译开始的时间，形如"),s("code",[t._v("hh:mm:ss")]),t._v(",例："),s("code",[t._v("18:15:47")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__cplusplus")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("整数值，取决于"),s("code",[t._v("C++")]),t._v("编译器支持的标准，如："),s("code",[t._v("201402")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDC_HOSTED__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("C++11新增预定义的宏,宿主环境是否具有标准C库的完整功能，如果具有标准C库的完整功能则__STDC_HOSTED__定义为1，否为定义为0")])])])]),t._v(" "),s("p",[t._v("可选的宏：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDC__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指示编译器是否支持ISO标准C语言，如果支持ISO标准C语言则_STDC__定义为1，否为定义为0,甚至有些编译器未定义")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDC_VERSION__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于定义C标准的版本号，但是标准文档中并没有明确规定其实现，所以在很多编译器中这个宏处于未定义状态")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDC_MB_MIGHT_NEQ_WC__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDC_ISO_10646__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于指示wchar_t是否使用Unicode，如果使用Unicode那么wchar_t展开为yyyymmL的形式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDCPP_STRICT_POINTER_SAFETY__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果实现中有"),s("a",{attrs:{href:"http://www.cplusplus.com/get_pointer_safety",target:"_blank",rel:"noopener noreferrer"}},[t._v("strict pointer safety"),s("OutboundLink")],1),t._v("返回1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("__STDCPP_THREADS__")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果程序可以有多线程，则为"),s("code",[t._v("1")])])])])]),t._v(" "),s("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}}),t._v(" "),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("a",{attrs:{href:"http://www.cplusplus.com/doc/tutorial/preprocessor/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cplusplus.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.tutorialspoint.com/cplusplus/cpp_preprocessor.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("tutorialspoint"),s("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);