(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{455:function(s,t,a){"use strict";a.r(t);var e=a(17),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"linux进程间通信ipc之共享内存和信号量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux进程间通信ipc之共享内存和信号量"}},[s._v("#")]),s._v(" Linux进程间通信IPC之共享内存和信号量")]),s._v(" "),t("h2",{attrs:{id:"信号量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#信号量"}},[s._v("#")]),s._v(" 信号量")]),s._v(" "),t("h3",{attrs:{id:"_1-基本介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本介绍"}},[s._v("#")]),s._v(" 1.基本介绍")]),s._v(" "),t("p",[s._v("信号量是一种用于多线程或多进程之间同步的机制。"),t("code",[s._v("信号量（Semaphore）")]),s._v("，是在多进程环境下使用的一种设施, 它负责协调各个进程, 以保证它们能够正确、合理地使用公共资源。信号量分为"),t("code",[s._v("单值")]),s._v("和"),t("code",[s._v("多值")]),s._v("两种，"),t("code",[s._v("单值信号量")]),s._v("只能被一个进程获得，"),t("code",[s._v("多值信号量")]),s._v("后者可以被若干个进程获得。")]),s._v(" "),t("p",[s._v("需要包含头文件")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<semaphore.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/sem.h>")])]),s._v("\n")])])]),t("p",[s._v("信号量可以用来保证两个或多个关键代码段不会被并发调用。")]),s._v(" "),t("h3",{attrs:{id:"_2-系统调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-系统调用"}},[s._v("#")]),s._v(" 2.系统调用")]),s._v(" "),t("p",[s._v("可以使用"),t("code",[s._v("sem_open")]),s._v(" 和 "),t("code",[s._v("semget")]),s._v("来创建信号量，不过这两个方法略有区别。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("sem_open创建信号量")])])]),s._v(" "),t("p",[s._v("sem_open：用于初始化和打开一个"),t("strong",[s._v("有名信号量")]),s._v(",它是POSIX标准中定义的函数，适用于命名信号量，可以创建新的信号量，也可以打开已存在的信号量。")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("sem_t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sem_cur "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sem_open")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SEM_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" O_CREAT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0666")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[s._v("semget创建信号量")])])]),s._v(" "),t("p",[t("code",[s._v("semget")]),s._v(" 用于获取"),t("code",[s._v("System V")]),s._v("信号量集的标识符。它是System V信号量API，较旧且不如POSIX信号量接口设计得好。可以获取已存在的信号量集的标识符，也可以创建新的信号量集。")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("semget")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key_t key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nsems"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("System V")]),s._v("和"),t("code",[s._v("POSIX")]),s._v("是两种不同的标准，用于定义操作系统接口。"),t("code",[s._v("System V``：最早由")]),s._v("AT&T"),t("code",[s._v("引入，包括了消息队列、共享内存和信号量等机制。它是早期")]),s._v("Unix"),t("code",[s._v("系统的一部分。")]),s._v("POSIX"),t("code",[s._v("是")]),s._v("IEEE"),t("code",[s._v("制定的可移植操作系统接口标准，旨在定义应用程序与操作系统之间的接口。它覆盖了更广泛的领域，包括文件操作、进程管理、线程同步等。")]),s._v("System V"),t("code",[s._v("在旧版本的")]),s._v("Unix"),t("code",[s._v("系统中广泛使用，而")]),s._v("POSIX`是新标准，更适合跨平台开发。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("信号量集专属控制函数")]),t("code",[s._v("semctl")])])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("semctl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" semid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" semnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" semun arg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("函数中参数"),t("code",[s._v("semid")]),s._v("是一个信号量集的标识符，"),t("code",[s._v("semnum")]),s._v("指定"),t("code",[s._v("semid")]),s._v("的信号集中的某一个信号量，其类似于在信号量集资源数组中的下标，用来对指定资源进行操作。参数"),t("code",[s._v("cmd")]),s._v("定义函数所要进行的操作，其取值及表达的意义与参数"),t("code",[s._v("arg")]),s._v("的设置有关。")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" semun\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* for SETVAL */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("semid_ds")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("buf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* for IPC_STAT and IPC_SET */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* for GETALL and SETALL */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("使用"),t("code",[s._v("sem_wait")]),s._v("和"),t("code",[s._v("sem_post")])])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<semaphore.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/sem.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sem_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sem_cur"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sem_post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sem_cur"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("code",[s._v("sem_wait")]),s._v("会阻塞进程直到"),t("code",[s._v("sem_post")]),s._v("发信号过来，依次实现同步。")]),s._v(" "),t("h2",{attrs:{id:"共享内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#共享内存"}},[s._v("#")]),s._v(" 共享内存")]),s._v(" "),t("h3",{attrs:{id:"基本介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[s._v("#")]),s._v(" 基本介绍")]),s._v(" "),t("p",[s._v("共享内存可以说是"),t("code",[s._v("Linux")]),s._v("下最快速、最有效的进程间通信方式。共享内存是多个进程可以把一段内存映射到自己的进程空间，以此来实现数据的共享及传输，这也是所有进程间通信方式中最快的一种，共享内存是存在于内核级别的一种资源。")]),s._v(" "),t("p",[s._v("查看当前系统IPC中的状态:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ipcs "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v("\n")])])]),t("h3",{attrs:{id:"_2-相关函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-相关函数"}},[s._v("#")]),s._v(" 2.相关函数")]),s._v(" "),t("h4",{attrs:{id:"system-v共享内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system-v共享内存"}},[s._v("#")]),s._v(" "),t("code",[s._v("System V")]),s._v("共享内存")]),s._v(" "),t("p",[s._v("对于"),t("code",[s._v("System V")]),s._v("共享内存，主要的几个"),t("code",[s._v("API")]),s._v("有"),t("code",[s._v("shmget")]),s._v("、"),t("code",[s._v("shmat")]),s._v("、"),t("code",[s._v("shmdt")]),s._v("及"),t("code",[s._v("shmctl")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("shmget")]),t("strong",[s._v("创建或打开共享内存")]),s._v(":")])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/ipc.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/shm.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmget")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key_t key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("shmget")]),s._v("函数除了可以用于创建一个新的共享内存外，也可用于打开一个已存在的共享内存。")]),s._v(" "),t("p",[s._v("参数"),t("code",[s._v("key")]),s._v("表示所要创建或打开的共享内存的键值。")]),s._v(" "),t("p",[t("code",[s._v("size")]),s._v("表示共享内存区域的大小，只在创建一个新的共享内存时生效。")]),s._v(" "),t("p",[s._v("参数"),t("code",[s._v("flag")]),s._v("表示调用函数的操作类型，也可用于设置共享内存的访问权限。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("附加到进程的地址空间")])])]),s._v(" "),t("p",[s._v("当一个共享内存创建或打开后，某个进程如果要使用该共享内存则必须将此内存区域附加到它的地址空间，附加操作的系统调用如下：")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flag "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[s._v("从当前进程的地址空间脱离")])])]),s._v(" "),t("p",[s._v("当进程对共享内存段的操作完成后，应调用"),t("code",[s._v("shmdt")]),s._v("函数，作用是将指定的共享内存段从当前进程空间中脱离出去。")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmdt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[s._v("控制")])])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmctl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("shmid_ds")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("buf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h4",{attrs:{id:"posix共享内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#posix共享内存"}},[s._v("#")]),s._v(" "),t("code",[s._v("POSIX")]),s._v("共享内存")]),s._v(" "),t("p",[t("code",[s._v("POSIX")]),s._v("接口可以创建命名的共享内存，用以在不同的进程间使用。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("shm_open")]),s._v("创建共享内存")])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shm_fd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shm_open")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SHM_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" O_RDONLY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0666")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" shm_fd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("可以通过指定"),t("code",[s._v("SHM_NAME")]),s._v("参数创建命名共享内存，这样就可以在不同的进程中访问同一块共享内存了。")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("mmap函数")]),s._v("，"),t("code",[s._v("mmap（Memory Map）")]),s._v("函数是一个强大的系统调用，用于将文件或其他对象映射到进程的虚拟内存地址空间。"),t("code",[s._v("mmap")]),s._v("映射的是文件的页缓存，而非磁盘中的文件本身。通过映射虚拟内存地址，可以直接在用户空间读写页缓存，避免将页缓存的数据复制到用户空间缓冲区的过程。使用"),t("code",[s._v("mmap")]),s._v("可以减少内存拷贝次数，提高文件读写操作的效率，但需要注意同步问题，避免数据丢失。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("addr：指定映射的虚拟内存地址，可以设置为NULL，让内核自动选择合适的地址。")])]),s._v(" "),t("li",[t("p",[s._v("length：映射的长度。")])]),s._v(" "),t("li",[t("p",[s._v("prot：映射内存的保护模式，如可读、可写等。")])]),s._v(" "),t("li",[t("p",[s._v("flags：指定映射的类型，如共享映射、私有映射等。")])]),s._v(" "),t("li",[t("p",[s._v("fd：进行映射的文件句柄。")])]),s._v(" "),t("li",[t("p",[s._v("offset：文件偏移量，从文件的何处开始映射。")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mmap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size_t length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" prot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flags"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" off_t offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token expression"}},[s._v("_data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token generic-function"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("static_cast")]),t("span",{pre:!0,attrs:{class:"token generic class-name"}},[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("uchar"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mmap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ")])]),s._v("\n                                    SHM_SIZE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n                                    PROT_READ"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                    MAP_PRIVATE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                    shm_fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("memcpy")]),s._v("将数据拷贝到共享内存中")])])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memcpy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("image_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" images_map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image_file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SHM_SIZE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[t("code",[s._v("munmap")]),s._v("函数")]),s._v("，用于删除映射到进程地址空间的对象。"),t("code",[s._v("munmap")]),s._v(" 用于解除已经通过 "),t("code",[s._v("mmap")]),s._v(" 映射到进程地址空间的内存区域。它会删除特定地址区域的对象映射。")])]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("munmap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data_pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SHM_SIZE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[s._v("shm_unlink")]),s._v("函数用于移除已命名的共享内存对象。"),t("code",[s._v("shm_unlink")]),s._v(" 是用于解除链接共享内存的重要函数，通常与 "),t("code",[s._v("shm_open")]),s._v(" 配对使用将删除字符串"),t("code",[s._v("name")]),s._v("指向的共享内存对象的名称。如果在解除链接对象时存在一个或多个对该共享内存对象的引用，那么在 "),t("code",[s._v("shm_unlink")]),s._v(" 返回之前，名称将被删除。但是，对共享内存对象内容的删除将被推迟，直到所有对该共享内存对象的打开和映射引用都被删除。")])]),s._v(" "),t("p",[s._v("完整的工程示例代码可以参考"),t("code",[s._v("gitee")]),s._v("仓库"),t("a",{attrs:{href:"https://gitee.com/lx_r/basic_cplusplus_examples.git",target:"_blank",rel:"noopener noreferrer"}},[s._v("basic_cplusplus_examples"),t("OutboundLink")],1),s._v("中的"),t("a",{attrs:{href:"https://gitee.com/lx_r/basic_cplusplus_examples/blob/master/debug/write_shm.cpp",target:"_blank",rel:"noopener noreferrer"}},[s._v("write_shm.cpp"),t("OutboundLink")],1),s._v("和"),t("a",{attrs:{href:"https://gitee.com/lx_r/basic_cplusplus_examples/blob/master/debug/read_shm.cpp",target:"_blank",rel:"noopener noreferrer"}},[s._v("read_shm.cpp"),t("OutboundLink")],1),s._v("文件。")]),s._v(" "),t("h3",{attrs:{id:"reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[s._v("#")]),s._v(" reference")]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://gitee.com/lx_r/basic_cplusplus_examples.git",target:"_blank",rel:"noopener noreferrer"}},[s._v("1.https://gitee.com/lx_r/basic_cplusplus_examples.git"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);