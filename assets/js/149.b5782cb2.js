(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{465:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linux下程序调试分析工具valgrind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux下程序调试分析工具valgrind"}},[t._v("#")]),t._v(" Linux下程序调试分析工具"),s("code",[t._v("Valgrind")])]),t._v(" "),s("h2",{attrs:{id:"_1-基本介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本介绍"}},[t._v("#")]),t._v(" 1.基本介绍")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("是开源的"),s("code",[t._v("Linux")]),t._v("程序调试工具，可以用来自动检测程序中存在的内存管理，线程同步的问题，帮助开发人员提升代码调试的效率。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("还可以输出程序的"),s("code",[t._v("Profile")]),t._v("信息，方便开发者定位程序中的性能问题。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("是开源的"),s("code",[t._v("Linux")]),t._v("程序，开发者可以根据需要自行修改源码后编译。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("支持主流的"),s("code",[t._v("Linux")]),t._v("系统，包括"),s("code",[t._v("x86/Linux")]),t._v(", "),s("code",[t._v("AMD64/Linux")]),t._v(" 和 "),s("code",[t._v("PPC32/Linux")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("功能强大，是大型复杂程序调试和系统"),s("code",[t._v("profile")]),t._v("分析的必备工具。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("适用于各种程序，包括桌面应用，库文件，数据库，游戏，网络浏览器，网络服务器，分布式控制系统，虚拟现实框架，事物服务器，编译器，虚拟机，嵌入式软件等。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("直接于程序的二进制文件交互，因此支持分析任何语言所编写的程序，不过"),s("code",[t._v("Valgrind")]),t._v("工具主要是面向"),s("code",[t._v("C/C++")]),t._v("程序的，因为"),s("code",[t._v("C/C++")]),t._v("语言需要手动的管理内存，更容易出问题。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind 100%")]),t._v("覆盖用户空间的代码。")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("开发者社区也比较活跃，"),s("code",[t._v("Valgrind")]),t._v("也在不断推出新版本。截至当前，"),s("code",[t._v("Valgrind")]),t._v("的最新版本是"),s("code",[t._v("20231031")]),t._v("发布的"),s("code",[t._v("valgrind-3.22.0")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_2-下载编译安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-下载编译安装"}},[t._v("#")]),t._v(" 2.下载编译安装")]),t._v(" "),s("p",[s("code",[t._v("Valgrind")]),t._v("官方没有发布二进制文件，需要开发者自己下载源码在对应的平台上编译。")]),t._v(" "),s("ul",[s("li",[t._v("1)下载源码")])]),t._v(" "),s("blockquote",[s("p",[t._v("一种方式是下载"),s("code",[t._v("*.tar.bz2")]),t._v("源码压缩包")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://valgrind.org/downloads/current.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://valgrind.org/downloads/current.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("解压:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jxvf")]),t._v(" valgrind "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.22")]),t._v(".0.tar.bz2\n")])])]),s("blockquote",[s("p",[t._v("另一种方式是"),s("a",{attrs:{href:"https://valgrind.org/downloads/repository.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用"),s("code",[t._v("git")]),t._v("下载"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://sourceware.org/git/valgrind.git\n")])])]),s("p",[t._v("下载后编译安装:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" valgrind\n./autogen.sh\n./configure "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--prefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("installation_dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("h2",{attrs:{id:"valgrind-c-程序内存扫描示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valgrind-c-程序内存扫描示例"}},[t._v("#")]),t._v(" "),s("code",[t._v("Valgrind C++")]),t._v("程序内存扫描示例")]),t._v(" "),s("p",[t._v("示例"),s("code",[t._v("C++")]),t._v("程序：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// memory_leak.cpp")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        p_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Foo foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("以上非常简单的一段代码，在类"),s("code",[t._v("Foo")]),t._v("的构造函数中使用"),s("code",[t._v("new")]),t._v("操作符在堆上分配了内存，而在使用结束后并没有使用"),s("code",[t._v("delete")]),t._v("操作符释放。")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("g++")]),t._v("的"),s("code",[t._v("-g")]),t._v("参数保留调试符号。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("g++ memory_leak.cpp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" leak\n")])])]),s("p",[t._v("使用"),s("code",[t._v("gdb")]),t._v("调试上面代码，发现可以正确执行:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("gdb leak "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-tui")]),t._v("\nstart\nb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\nnext\nc\n")])])]),s("p",[t._v("使用"),s("code",[t._v("valgrind")]),t._v("扫描这段代码生成的可执行文件"),s("code",[t._v("leak")]),t._v("，发现存在内存泄漏:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("valgrind --leak-check"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yes ./leak\n")])])]),s("p",[t._v("输出为:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== Memcheck, a memory error detector")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== Command: ./leak")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== HEAP SUMMARY:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==     in use at exit: 40 bytes in 1 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==   total heap usage: 2 allocs, 1 frees, 73,768 bytes allocated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    at 0x483E617: operator new[](unsigned long) (vg_replace_malloc.c:725)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    by 0x401168: Foo::Foo() (valgrind.cpp:4)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    by 0x401140: main (valgrind.cpp:11)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== LEAK SUMMARY:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    definitely lost: 40 bytes in 1 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    indirectly lost: 0 bytes in 0 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==      possibly lost: 0 bytes in 0 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    still reachable: 0 bytes in 0 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==         suppressed: 0 bytes in 0 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== For lists of detected and suppressed errors, rerun with: -s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)")]),t._v("\n")])])]),s("p",[t._v("上面的报告中，"),s("code",[t._v("292153")]),t._v("是进程"),s("code",[t._v("ID")])]),t._v(" "),s("p",[t._v("在堆上分配了两块内存，"),s("code",[t._v("Foo foo")]),t._v("和"),s("code",[t._v("new int[10]")]),t._v(",但是只释放了一块，"),s("code",[t._v("40")]),t._v("个字节的"),s("code",[t._v("new int")]),t._v("数组所占的内存并没有释放。因此，程序结束后发生了内存泄漏。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    at 0x483E617: operator new[](unsigned long) (vg_replace_malloc.c:725)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    by 0x401168: Foo::Foo() (valgrind.cpp:4)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==291190==    by 0x401140: main (valgrind.cpp:11)")]),t._v("\n")])])]),s("p",[t._v("上面的堆栈信息告诉我们程序是在哪里发生了内存泄漏。其中:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("definitely lost")]),t._v("意味着内存泄漏，必须修复。")]),t._v(" "),s("li",[s("code",[t._v("probably lost")]),t._v("程序可能发生了内存泄漏，除非开发者明确知道自己对指针的操作，否则应该修复。")])]),t._v(" "),s("p",[t._v("修复上面问题最简单的就是在析构函数中添加"),s("code",[t._v("delete")]),t._v("操作")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// memory_leak.cpp")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        p_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" p_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Foo foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("重新编译后，"),s("code",[t._v("Valgrind")]),t._v("的扫描结果为：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== Memcheck, a memory error detector")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== Command: ./leak")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== HEAP SUMMARY:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153==     in use at exit: 0 bytes in 0 blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153==   total heap usage: 2 allocs, 2 frees, 73,768 bytes allocated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== All heap blocks were freed -- no leaks are possible")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== For lists of detected and suppressed errors, rerun with: -s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ==292153== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)")]),t._v("\n")])])]),s("p",[t._v("更多使用方法可以参考"),s("a",{attrs:{href:"https://valgrind.org/docs/manual/manual-intro.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://valgrind.org/docs/manual/manual-intro.html"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" reference")]),t._v(" "),s("blockquote",[s("p",[t._v("1."),s("a",{attrs:{href:"https://valgrind.org/docs/manual/manual-intro.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://valgrind.org/docs/manual/manual-intro.html"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);