(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{496:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linux-shell-命令行选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-shell-命令行选项"}},[t._v("#")]),t._v(" linux shell 命令行选项")]),t._v(" "),s("p",[t._v("选项是跟在单破折线后面的单个字母，它能改变命令的行为。")]),t._v(" "),s("p",[t._v("使用命令行参数，需要每次给参数传入需要的值；而使用命令行选项，只需要从支持的选项中选出一个自己需要的选项传入就可以了。")]),t._v(" "),s("p",[t._v("譬如要实现一个支持加减乘除的命令，运算的数值最好写成命令行参数，因为数值有无穷多的可能，而运算的类型最好写成命令行选项，因为毕竟运算只有那么多种。")]),t._v(" "),s("h2",{attrs:{id:"_1-命令行选项的手动实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令行选项的手动实现"}},[t._v("#")]),t._v(" 1.命令行选项的手动实现")]),t._v(" "),s("h3",{attrs:{id:"简单选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单选项"}},[t._v("#")]),t._v(" 简单选项")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        -add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -add option"')]),t._v(" \n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x + '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' = "')]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x + "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -substract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -substract option"')]),t._v(" \n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x - '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' = "')]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -multipy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -multipy option"')]),t._v(" \n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x * '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' = "')]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x * "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -divide"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -divide option"')]),t._v(" \n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x / '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' = "')]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x / "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' is not an option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("p",[t._v("执行命令，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash ./cmd_opt.sh 1 -add 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -add option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x + 2 = 3")]),t._v("\n")])])]),s("h3",{attrs:{id:"分离命令行参数和选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分离命令行参数和选项"}},[t._v("#")]),t._v(" 分离命令行参数和选项")]),t._v(" "),s("p",[t._v("有时候呢，需要在使用命令行参数的同时使用命令行选项，这个时候呢就需要将两者进行分离。")]),t._v(" "),s("p",[s("code",[t._v("Linux")]),t._v("中处理这个问题的标准方式是用特殊字符来将二者分开，该字符会告诉脚本何时选项结束以及普通参数何时开始。对"),s("code",[t._v("Linux")]),t._v("来说，这个特殊字符是双破折线（"),s("code",[t._v("--")]),t._v("）")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        -a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -a option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -b option"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -c option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        --"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' is not an option"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("param")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parameter #'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n")])])]),s("p",[t._v("运行命令：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./cmd_copt.sh -a -b -c -- x y x")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -c option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #1: x")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #2: y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #3: x")]),t._v("\n")])])]),s("h3",{attrs:{id:"带值的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#带值的选项"}},[t._v("#")]),t._v(" 带值的选项")]),t._v(" "),s("p",[t._v("有些情况下，需要使用带值的选项。这有些类似于命名参数，之前介绍的命令行参数都是通过"),s("code",[t._v("$1")]),t._v("这种方式读取的，类似于位置参数。")]),t._v(" "),s("p",[t._v("如此，其实只需要在上面介绍的例子上稍加修改就可以了。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        -a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -a option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -b option"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v("Value of -b option is "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -c option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        --"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' is not an option"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("param")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parameter #'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n")])])]),s("p",[t._v("执行结果：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./cmd_copt.sh -a -b value_b -c -- x y x")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\tValue of -b option is value_b")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -c option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #1: x")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #2: y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #3: x")]),t._v("\n")])])]),s("h3",{attrs:{id:"合并选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并选项"}},[t._v("#")]),t._v(" 合并选项")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("Linux")]),t._v("中使用命令时，经常会用到将几个参数写在一起，如"),s("code",[t._v("ls -alh")]),t._v(","),s("code",[t._v("ps -aux")]),t._v("等等，自己动手实现这种命令行选项该如何操作呢？还是"),s("code",[t._v("coding from scratch")]),t._v("的话，自己造轮子就太麻烦了，好在"),s("code",[t._v("Linux")]),t._v("中提供了"),s("code",[t._v("getopt/getopts")]),t._v("命令来处理命令行选项和参数。")]),t._v(" "),s("h2",{attrs:{id:"_2-使用-getopt-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-getopt-命令"}},[t._v("#")]),t._v(" 2.使用 getopt 命令")]),t._v(" "),s("p",[t._v("命令格式:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("getopt optstring parameters\n")])])]),s("p",[s("code",[t._v("optstring")]),t._v("定义了命令行有效的选项字母，还定义了哪些选项字母需要参数值。"),s("code",[t._v("getopt")]),t._v("会基于给定的 "),s("code",[t._v("optstring")]),t._v(" 解析提供的参数。 "),s("code",[t._v("parameters")]),t._v("定义了命令行参数有哪些。")]),t._v(" "),s("p",[t._v("该命令的使用方法为：")]),t._v(" "),s("ul",[s("li",[t._v("首先，在 "),s("code",[t._v("optstring")]),t._v(" 中"),s("strong",[t._v("列出要在脚本中用到的每个命令行选项字母")])]),t._v(" "),s("li",[t._v("然后，在每个"),s("strong",[t._v("需要参数值的选项字母后加一个冒号")]),t._v("。")])]),t._v(" "),s("p",[t._v("如下:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("getopt ab:cd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" value_b "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cd")]),t._v(" param1 param2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -a -b value_b -c -d -- param1 param2")]),t._v("\n")])])]),s("p",[t._v("上面调用"),s("code",[t._v("getopt")]),t._v("命令的示例中，"),s("code",[t._v("optstring")]),t._v("为"),s("code",[t._v("ab:cd")]),t._v(" "),s("code",[t._v("parameters")]),t._v("为"),s("code",[t._v("-a -b value_b -cd param1 param2")]),t._v("，可以看到"),s("code",[t._v("value_b")]),t._v("被解析成了选项"),s("code",[t._v("b")]),t._v("的值，合并的选项"),s("code",[t._v("-cd")]),t._v("被分别拆开了。并插入双破折线来分隔行中的额外参数，"),s("code",[t._v("param1 param2")]),t._v("是作为命令行参数出现的。")]),t._v(" "),s("p",[t._v("如果指定了一个不在 "),s("code",[t._v("optstring")]),t._v(" 中的选项，默认情况下， "),s("code",[t._v("getopt")]),t._v(" 命令会产生一条错误消息。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("getopt ab "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-abc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# getopt: 不适用的选项 -- c")]),t._v("\n")])])]),s("p",[t._v("在脚本中该如何使用"),s("code",[t._v("getopt")]),t._v("呢?")]),t._v(" "),s("p",[s("code",[t._v("set")]),t._v("命令能够处理"),s("code",[t._v("shell")]),t._v("中的各种变量。"),s("code",[t._v("set")]),t._v(" 命令会显示为某个特定进程设置的所有环境变量。"),s("code",[t._v("set")]),t._v(" 命令的选项之一是双破折线"),s("code",[t._v("（ -- ）")]),t._v("，它会将命令行参数替换成 "),s("code",[t._v("set")]),t._v(" 命令的命令行值。该方法会将原始脚本的命令行参数传给 "),s("code",[t._v("getopt")]),t._v(" 命令，之后再将 "),s("code",[t._v("getopt")]),t._v(" 命令的输出传"),s("br"),t._v("\n给 "),s("code",[t._v("set")]),t._v(" 命令，用 "),s("code",[t._v("getopt")]),t._v(" 格式化后的命令行参数来替换原始的命令行参数。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -- "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("getopt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" ab:cd "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),s("p",[t._v("如此，可以将前面的脚本改写，使其支持选项参数合并等操作。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -- "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("getopt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" ab:c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        -a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -a option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -b option"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v("Value of -b option is "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        -c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -c option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        --"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(' is not an option"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("param")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parameter #'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./cmd_copt.sh -ac -b valueB valueD valueE valueF")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -c option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\tValue of -b option is 'valueB'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #1: 'valueD'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #2: 'valueE'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #3: 'valueF'")]),t._v("\n")])])]),s("p",[t._v("不过,"),s("code",[t._v("getopt")]),t._v("还存在一个不足，那就是处理带空格的参数值时会出错。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./cmd_copt.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ac")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" valueB "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is valueD"')]),t._v(" valueF\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -c option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\tValue of -b option is 'valueB'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #1: 'this")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #2: is")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #3: valueD'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter #4: 'valueF'")]),t._v("\n")])])]),s("p",[t._v("可以看到，"),s("code",[t._v("this is valueD")]),t._v("还是被拆分了。这就要引入一个更复杂也更强大的命令"),s("code",[t._v("getopts")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"getopts命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getopts命令"}},[t._v("#")]),t._v(" getopts命令")]),t._v(" "),s("p",[s("code",[t._v("getopts")]),t._v("内建于"),s("code",[t._v("bash shell")]),t._v("，比"),s("code",[t._v("getopt")]),t._v("命令多了一些扩展功能。")]),t._v(" "),s("p",[s("code",[t._v("getopt")]),t._v("将命令行上选项和参数处理后只生成一个输出，而 "),s("code",[t._v("getopts")]),t._v(" 命令每次被调用时，它一次只处理命令行上检测到的一个参数。处理完所有的参数后，它会退出并返回一个大于0的退出状态码。这让它非常适合用解析命令行所有参数的循环中，因此，能够和已有的"),s("code",[t._v("shell")]),t._v("参数变量配合默契。")]),t._v(" "),s("p",[s("code",[t._v("getopts")]),t._v("命令的格式如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("getopts")]),t._v(" optstring variable\n")])])]),s("p",[s("code",[t._v("optstring")]),t._v(" 值作用类似于 "),s("code",[t._v("getopt")]),t._v(" "),s("code",[t._v("命令。getopts")]),t._v(" 命令将当前参数保存在命令行中定义的 "),s("code",[t._v("variable")]),t._v(" 中。")]),t._v(" "),s("p",[s("code",[t._v("getopts")]),t._v(" 命令会用到两个环境变量"),s("code",[t._v("OPTARG")]),t._v("和"),s("code",[t._v("OPTIND")]),t._v("。如果选项需要跟一个参数值， "),s("code",[t._v("OPTARG")]),t._v(" 环境变量就会保存这个值。"),s("code",[t._v("OPTIND")]),t._v(" 环境变量保存了参数列表中 getopts 正在处理的参数位置。")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("getopts")]),t._v("的例子：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("getopts")]),t._v(" :ab:c opt\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opt")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -a option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -b option, with value '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$OPTARG")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -c option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unknown option: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opt")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("p",[t._v("在本例中 "),s("code",[t._v("case")]),t._v(" 语句的用法有些不同。"),s("code",[t._v("getopts")]),t._v(" 命令解析命令行选项时会移除开"),s("br"),t._v("\n头的单破折线，所以在 "),s("code",[t._v("case")]),t._v(" 定义中不用单破折线。")]),t._v(" "),s("p",[t._v("执行，")]),t._v(" "),s("p",[t._v("支持带引号的参数值：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test_opts.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ab")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is valueB'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option, with value this is valueB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -c option")]),t._v("\n")])])]),s("p",[t._v("将选项字母和参数值放在一起使用时，可以不用加空格")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test_opts.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-abValueB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option, with value ValueB")]),t._v("\n")])])]),s("p",[s("code",[t._v("getopts")]),t._v(" 还能够将命令行上找到的所有未定义的选项统一输出成问号")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test_opts.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-abValueB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-de")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option, with value ValueB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Unknown option: ?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Unknown option: ?")]),t._v("\n")])])]),s("p",[s("code",[t._v("optstring")]),t._v(" 中未定义的选项字母会以问号形式发送给代码。")]),t._v(" "),s("p",[s("code",[t._v("getopts")]),t._v(" 命令知道何时停止处理选项，并将参数留给程序员处理。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("getopts")]),t._v(" 处理每个选项时，它会将 "),s("code",[t._v("OPTIND")]),t._v(" 环境变量值增一。在 "),s("code",[t._v("getopts")]),t._v(" 完成处理时，可以使用 "),s("code",[t._v("shift")]),t._v(" 命令和 "),s("code",[t._v("OPTIND")]),t._v(" 值来移动参数。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("getopts")]),t._v(" :ab: opt\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opt")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -a option"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found the -b option, with value '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$OPTARG")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unknown option: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opt")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$OPTIND")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("param")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parameter '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$param")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test_opts.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" ValueB "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3 4"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -a option")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Found the -b option, with value ValueB")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter 1: 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter 2: 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Parameter 3: 3 4")]),t._v("\n")])])]),s("h2",{attrs:{id:"选项标准化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项标准化"}},[t._v("#")]),t._v(" 选项标准化")]),t._v(" "),s("p",[t._v("在创建"),s("code",[t._v("shell")]),t._v("脚本时，完全可以决定用哪些字母选项以及它们的用法。但有些字母选项在Linux世界里已经拥有了某种程度的标准含义。如果能在"),s("code",[t._v("shell")]),t._v("脚本中支持这些选项，脚本看起来能更友好一些。")]),t._v(" "),s("p",[s("code",[t._v("Linux")]),t._v("中用到的一些命令行选项的常用含义:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("选项")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("显示所有对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-c")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("生成一个计数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-d")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定一个目录")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-e")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("扩展一个对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-f")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定读入数据的文件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-h")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("显示命令的帮助信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-i")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("忽略文本大小写")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-l")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("产生输出的长格式版本")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-n")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("使用非交互模式（批处理）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-o")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将所有输出重定向到的指定的输出文件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-q")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("以安静模式运行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-r")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("递归地处理目录和文件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-s")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("以安静模式运行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-v")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("生成详细输出")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-x")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("排除某个对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("对所有问题回答yes")])])])]),t._v(" "),s("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}})],1)}),[],!1,null,null,null);s.default=e.exports}}]);