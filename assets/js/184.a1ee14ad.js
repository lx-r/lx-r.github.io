(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{501:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linux-shell输入输出流管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-shell输入输出流管理"}},[t._v("#")]),t._v(" Linux Shell输入输出流管理")]),t._v(" "),s("p",[t._v("目前对于普通用户来说，接触到最多的"),s("code",[t._v("Linux Shell")]),t._v("输出的方法有两个，一个是显示到显示器上，一个是将输出重定向到文件中。不过，目前的方式，只能二选一，要么将"),s("code",[t._v("shell")]),t._v("全部输出到显示器上，要么将"),s("code",[t._v("shell")]),t._v("输出全部保存到文件中，如果想将一部分输出到显示上一部分记录到文件中，那么该如何实现呢？如何用标准的"),s("code",[t._v("Linux")]),t._v("输入和输出系统来将脚本输出导向特定位置呢?")]),t._v(" "),s("h2",{attrs:{id:"_1-标准文件描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-标准文件描述符"}},[t._v("#")]),t._v(" 1)标准文件描述符")]),t._v(" "),s("p",[s("code",[t._v("Linux")]),t._v("系统将每个对象当作文件处理。"),s("code",[t._v("Linux")]),t._v("用文件描述符来标识每个文件对象。文件描述符是一个非负整数，可以唯一标识会话中打开的文件。每个进程一次最多可以有九个文件描述符。出于特殊目的，"),s("code",[t._v("bash shell")]),t._v("保留了前三个文件描述符"),s("code",[t._v("(0, 1, 2)")]),t._v("。这三个特殊文件描述符作为标准的文件描述符会处理脚本的输入和输出。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("文件描述符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("缩写")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("STDIN")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("标准输入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("STDOUT")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("标准输出")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("STDERR")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("标准错误")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("STDIN")]),t._v("文件描述符代表"),s("code",[t._v("shell")]),t._v("的标准输入")]),t._v("。对终端界面来说，标准输入是键盘。"),s("code",[t._v("shell")]),t._v("从 "),s("code",[t._v("STDIN")]),t._v("文件描述符对应的键盘获得输入，在用户输入时处理每个字符。")]),t._v(" "),s("p",[t._v("许多"),s("code",[t._v("bash")]),t._v("命令能接受 "),s("code",[t._v("STDIN")]),t._v(" 的输入，尤其是没有在命令行上指定文件的话。")]),t._v(" "),s("p",[t._v("当在命令行上只输入 "),s("code",[t._v("cat")]),t._v(" 命令时，它会从 "),s("code",[t._v("STDIN")]),t._v(" 接受输入。输入一行， "),s("code",[t._v("cat")]),t._v(" 命令就会显示出一行。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v("\nthis is a line\nthis is a line\n")])])]),s("p",[t._v("在使用输入重定向符号"),s("code",[t._v("（ < ）")]),t._v("时，"),s("code",[t._v("Linux")]),t._v("会用重定向指定的文件来替换标准输入文件描述符。它会读取文件并提取数据，就如同它是键盘上键入的。")]),t._v(" "),s("p",[t._v("可以通过 "),s("code",[t._v("STDIN")]),t._v(" 重定向符号强制 "),s("code",[t._v("cat")]),t._v(" 命令接受来自另一个非 "),s("code",[t._v("STDIN")]),t._v(" 文件的输入:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\nthis is a line\n")])])]),s("p",[t._v("**STDOUT文件描述符代表"),s("code",[t._v("shell")]),t._v("的标准输出。**在终端界面上，标准输出就是终端显示器。"),s("code",[t._v("shell")]),t._v("的所有输出（包括"),s("code",[t._v("shell")]),t._v("中运行的程序和脚本）会被定向到标准输出中，也就是显示器。")]),t._v(" "),s("p",[t._v("通过输出重定向符号，通常会显示到显示器的所有输出会被"),s("code",[t._v("shell")]),t._v("重定向到指定的重定向文件。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-alh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 总用量 12K")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# drwxrwxr-x 2 rob rob 4.0K 1月   5 23:28 .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# drwxr-xr-x 6 rob rob 4.0K 1月   5 23:28 ..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r-- 1 rob rob    3 1月   5 23:28 1.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r-- 1 rob rob    0 1月   5 23:28 test.log")]),t._v("\n")])])]),s("p",[s("strong",[t._v("也可以用"),s("code",[t._v(">>")]),t._v("符号将数据追加到某个文件")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" test.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 总用量 12K")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# drwxrwxr-x 2 rob rob 4.0K 1月   5 23:28 .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# drwxr-xr-x 6 rob rob 4.0K 1月   5 23:28 ..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r-- 1 rob rob    3 1月   5 23:28 1.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r-- 1 rob rob    0 1月   5 23:28 test.log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lx       :1           2024-01-02 21:11 (:1)")]),t._v("\n")])])]),s("p",[s("strong",[t._v("当命令生成错误消息时，"),s("code",[t._v("shell")]),t._v("并不能将错误消息重定向到输出重定向文件")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-alh")]),t._v(" rob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls: 无法访问 'rob': 没有那个文件或目录")]),t._v("\n")])])]),s("p",[s("code",[t._v("test.log")]),t._v("文件创建成功了，只是里面是空的。"),s("code",[t._v("shell")]),t._v("对于错误消息的处理是跟普通输出分开的。")]),t._v(" "),s("p",[s("strong",[t._v("STDERR文件描述符用来处理错误消息")]),t._v("。"),s("code",[t._v("STDERR")]),t._v("文件描述符代表"),s("code",[t._v("shell")]),t._v("的标准错误输出。"),s("code",[t._v("shell")]),t._v("或"),s("code",[t._v("shell")]),t._v("中运行的程序和脚本出错时生成的错误消息都会发送到这个位置。")]),t._v(" "),s("p",[t._v("尽管分配给它们的文件描述符值不同，默认情况下， "),s("code",[t._v("STDERR")]),t._v(" 文件描述符会和 "),s("code",[t._v("STDOUT")]),t._v(" 文件描述符指向同样的地方,譬如显示器，但"),s("code",[t._v("STDERR")]),t._v(" 并不会随着 "),s("code",[t._v("STDOUT")]),t._v(" 的重定向而发生改变。")]),t._v(" "),s("p",[s("strong",[t._v("要重定向错误输出，只需要在使用重定向符号时定义 "),s("code",[t._v("STDERR")]),t._v(" 文件描述符就可以了")]),t._v("。"),s("code",[t._v("STDERR")]),t._v(" 文件描述符被设成 "),s("code",[t._v("2")]),t._v("，可以选择只重定向错误消息。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-al")]),t._v(" rob "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" test.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.log \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls: 无法访问 'rob': 没有那个文件或目录")]),t._v("\n")])])]),s("p",[t._v("用这种方法，"),s("code",[t._v("shell")]),t._v("会只重定向错误消息，正常 "),s("code",[t._v("STDOUT")]),t._v(" 输出仍然会发送到默认的 "),s("code",[t._v("STDOUT")]),t._v(" 文件描述符，也就是显示器。")]),t._v(" "),s("p",[s("strong",[t._v("要同时重定向错误和正常输出，必须用两个重定向符号")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-al")]),t._v(" rob  test.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" test.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("out.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.log \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls: 无法访问 'rob': 没有那个文件或目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" out.log \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r-- 1 rob rob 52 1月   5 23:44 test.log")]),t._v("\n")])])]),s("p",[s("strong",[t._v("也可以将 "),s("code",[t._v("STDERR")]),t._v(" 和 "),s("code",[t._v("STDOUT")]),t._v(" 的输出重定向到同一个输出文件")]),t._v("。为此"),s("code",[t._v("bash shell")]),t._v("提供了特殊的重定向符号"),s("code",[t._v("&>")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-al")]),t._v(" rob  test.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" test.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls: 无法访问 'rob': 没有那个文件或目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r-- 1 rob rob 52 1月   5 23:47 test.log")]),t._v("\n")])])]),s("p",[t._v("当使用 "),s("code",[t._v("&>")]),t._v(" 符时，命令生成的所有输出都会发送到同一位置，包括数据和错误。为了避免错误信息散落在输出文件中，相较于标准输出，"),s("code",[t._v("bash shell")]),t._v("自动赋予了错误消息更高的优先级。")]),t._v(" "),s("h2",{attrs:{id:"_2-脚本中重定向输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-脚本中重定向输出"}},[t._v("#")]),t._v(" 2)脚本中重定向输出")]),t._v(" "),s("p",[t._v("在脚本中通过重定向"),s("code",[t._v("STDOUT")]),t._v(" 和 "),s("code",[t._v("STDERR")]),t._v(" 文件描述符就可以在多个位置生成输出了。")]),t._v(" "),s("h3",{attrs:{id:"临时重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#临时重定向"}},[t._v("#")]),t._v(" 临时重定向")]),t._v(" "),s("p",[t._v("可以将单独的一行输出重定向到 "),s("code",[t._v("STDERR")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" error message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" normal message\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ ./redirect.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("erro.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# normal message")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" erro.log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# error message")]),t._v("\n")])])]),s("p",[t._v("在上面的例子中，会发现"),s("code",[t._v("error message")]),t._v("这句被记录到"),s("code",[t._v("erro.log")]),t._v("文件中了，这正是因为在"),s("code",[t._v("echo")]),t._v("语句后面加了"),s("code",[t._v(">&2")]),t._v("将输出内容重定向了"),s("code",[t._v("STDERR")]),t._v("了。在运行脚本时重定向了"),s("code",[t._v("STDERR")]),t._v("，脚本中所有导向 "),s("code",[t._v("STDERR")]),t._v(" 的文本都会被重定向。")]),t._v(" "),s("h3",{attrs:{id:"永久重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#永久重定向"}},[t._v("#")]),t._v(" 永久重定向")]),t._v(" "),s("p",[t._v("像上面那样，一句一句的重定向，如果需要输出的内容多的话，就会变的很麻烦了。这时，可以用 "),s("code",[t._v("exec")]),t._v(" 命令在"),s("code",[t._v("shell")]),t._v("脚本运行时重定向某个特定文件描述符。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("testout\n")])])]),s("p",[t._v("这个语句在"),s("code",[t._v("shell")]),t._v("脚本中可以将"),s("code",[t._v("STDOUT")]),t._v("重定向到文件"),s("code",[t._v("testout")]),t._v("中，这时就不会显示到显示器上了。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("testout\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is a test of redirecting all output"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from a script to another file."')]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ ./redirect.sh\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testout\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is a test of redirecting all output")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from a script to another file.")]),t._v("\n")])])]),s("p",[t._v("可以在脚本执行过程中重定向 "),s("code",[t._v("STDOUT")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("testerror\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" start of script\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" STDOUT to log "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("testout\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log to error "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&2")]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ ./redirect.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start of script")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# STDOUT to log file")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testout \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log to file")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testerror\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log to error file")]),t._v("\n")])])]),s("p",[t._v("这个脚本示例中值得注意的是，"),s("strong",[s("code",[t._v("exec 2>testerror")]),t._v("语句将"),s("code",[t._v("STDERR")]),t._v("重定向到了文件"),s("code",[t._v("testerror")]),t._v("中，这时后面再将输出重定向到"),s("code",[t._v("STDERR")]),t._v("中时"),s("code",[t._v(">&2")]),t._v("，错误信息会被记录到"),s("code",[t._v("testerror")]),t._v("文件中")]),t._v("。")]),t._v(" "),s("p",[t._v("不过上面的操作也有个问题，那就是一旦将"),s("code",[t._v("STDOUT")]),t._v("重定向到文件"),s("code",[t._v("testout")]),t._v("中就没办法再恢复输出到屏幕上了。接下来会介绍怎样才能实现重定向的恢复。")]),t._v(" "),s("h3",{attrs:{id:"自定义输出重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义输出重定向"}},[t._v("#")]),t._v(" 自定义输出重定向")]),t._v(" "),s("p",[t._v("前面介绍的是3个标准的文件描述符的重定向，除此之外每个进程还支持自定义6个打开的文件描述符。")]),t._v(" "),s("p",[t._v("可以用 "),s("code",[t._v("exec")]),t._v(" 命令来给输出分配文件描述符。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),t._v("test3out\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log to test3out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log back to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v(" \n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ ./redirect.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log to screen")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log back to screen")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test3out\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log to test3out")]),t._v("\n")])])]),s("p",[t._v("以上就是自定义了输出文件描述符"),s("code",[t._v("3")]),t._v("到文件"),s("code",[t._v("test3out")]),t._v("中，上面会创建新文件"),s("code",[t._v("test3out")]),t._v(",也可以不创建新文件，而使用追加的方式,")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">>")]),t._v("test13out\n")])])]),s("p",[s("strong",[t._v("可以分配另外一个文件描述符给标准文件描述符，这样就可以恢复已重定向的文件描述符了")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("test13out\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log to test13out "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" log to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ ./redirect.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log to screen")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test13out \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log to test13out file")]),t._v("\n")])])]),s("p",[t._v("上面的例子，是先将文件描述符"),s("code",[t._v("3")]),t._v("重定向到"),s("code",[t._v("STDOUT")]),t._v("，再将"),s("code",[t._v("STDOUT")]),t._v("重定向到文件"),s("code",[t._v("test13out")]),t._v("，输出结束后又将文件描述符"),s("code",[t._v("1")]),t._v("重定向到文件描述符"),s("code",[t._v("3")]),t._v("也就是"),s("code",[t._v("STDOUT")]),t._v("上，这样就可以将输出恢复到屏幕上了，有点类似暂存变量的意思。")]),t._v(" "),s("h2",{attrs:{id:"_3-重定向输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-重定向输入"}},[t._v("#")]),t._v(" 3)重定向输入")]),t._v(" "),s("p",[t._v("默认的"),s("code",[t._v("STDIN")]),t._v("是用户从键盘输入，"),s("code",[t._v("exec")]),t._v(" 命令允许你将 "),s("code",[t._v("STDIN")]),t._v(" 重定向到"),s("code",[t._v("Linux")]),t._v("系统上的文件中。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v("<")]),t._v(" testfile\n")])])]),s("p",[t._v("这个命令会告诉"),s("code",[t._v("shell")]),t._v("它应该从文件 "),s("code",[t._v("testfile")]),t._v(" 中获得输入，而不是 "),s("code",[t._v("STDIN")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("filename")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$filename")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" line\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Line #'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$line")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testfile \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# error message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# new line")]),t._v("\n$ ./redirect.sh testfile\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Line #1: error message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Line #2: new line")]),t._v("\n")])])]),s("p",[s("code",[t._v("read")]),t._v(" 命令读取用户在键盘上输入的数据。将 "),s("code",[t._v("STDIN")]),t._v(" 重定向到文件后，"),s("br"),t._v("\n当 "),s("code",[t._v("read")]),t._v(" 命令试图从 "),s("code",[t._v("STDIN")]),t._v(" 读入数据时，它会到文件去取数据，而不是键盘。")]),t._v(" "),s("p",[s("strong",[t._v("可以用和重定向输出文件描述符同样的办法重定向输入文件描述符")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("6")]),t._v("<")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("testfile")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$testfile")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" line\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Line #'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$line")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v("<")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Are you sure? "')]),t._v(" answer\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$answer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    Y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Good."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    N"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ ./rediect.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Line #1: error message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Line #2: new line")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Are you sure? Y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Good.")]),t._v("\n")])])]),s("p",[t._v("这里先创建了文件描述符"),s("code",[t._v("6")]),t._v("作为"),s("code",[t._v("STDIN")]),t._v("的重定向，又将"),s("code",[t._v("STDIN")]),t._v("重定向到了"),s("code",[t._v("testfile")]),t._v("，最后又利用"),s("code",[t._v("6")]),t._v("恢复了"),s("code",[t._v("STDIN")]),t._v("，这和前面介绍的"),s("code",[t._v("STDOUT")]),t._v("的重定向与恢复基本类似。")]),t._v(" "),s("h2",{attrs:{id:"_4-支持读写的文件描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-支持读写的文件描述符"}},[t._v("#")]),t._v(" 4)支持读写的文件描述符")]),t._v(" "),s("p",[t._v("以打开单个文件描述符来作为输入和输出，即用同一个文件描述符对同一个文件进行读写。用这种方法时，要特别小心，因为是对同一个文件进行数据读写，"),s("code",[t._v("shell")]),t._v("会维护一个指明在文件中的当前位置的内部指针，任何读或写都会从文件指针上次的位置开始，如果操作不小心会导致文件内容的读写错位。")]),t._v(" "),s("p",[t._v("支持输入输出的文件描述符的创建方式是使用"),s("code",[t._v("<>")]),t._v("符号，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v("<>")]),t._v(" testfile\n")])])]),s("p",[t._v("支持输入输出文件描述符的一个例子，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v("<>")]),t._v(" testfile\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The first line: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$line")]),t._v('"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"line2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&3")]),t._v("\n")])])]),s("p",[t._v("执行,")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testfile\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# error message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# new line")]),t._v("\n$ ./redirect.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The first line: error message")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testfile\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# error message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# line2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ne")]),t._v("\n")])])]),s("p",[t._v("这个例子中，"),s("code",[t._v("read line <&3")]),t._v("定义了从文件描述符"),s("code",[t._v("3")]),t._v("中读取一行输入，这时文件指针就指向了第二行的开始位置，重定向输入到"),s("code",[t._v("&3")]),t._v("中时，"),s("code",[t._v("line2\\n")]),t._v("会被记录到"),s("code",[t._v("testfile")]),t._v("文件第二行开始的位置，并覆盖掉原来的内容。最后就得到了上面展示的结果。")]),t._v(" "),s("h2",{attrs:{id:"_5-关闭文件描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-关闭文件描述符"}},[t._v("#")]),t._v(" 5)关闭文件描述符")]),t._v(" "),s("p",[s("code",[t._v("shell")]),t._v("会在脚本退出时自动关闭创建的新的输入或输出文件描述符。有时需要在脚本结束前手动关闭文件描述符，对应的操作是将它重定向到特殊符号 "),s("code",[t._v("&-")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">&")]),t._v("-\n")])])]),s("p",[t._v("尝试使用已关闭的文件描述符时会报错，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./redirect.sh: 第 11 行： echo: 写错误: 错误的文件描述符")]),t._v("\n")])])]),s("p",[t._v("当然也可以手动关闭标准输入输出文件描述符，关闭后同样无法再使用它们。")]),t._v(" "),s("p",[t._v("在关闭文件描述符后，如果随后在脚本中又打开了同一个输出文件，"),s("code",[t._v("shell")]),s("br"),t._v("\n会用一个新文件来替换已有文件，会覆盖掉原来的内容。")]),t._v(" "),s("h2",{attrs:{id:"_6-列出打开的文件描述符及关闭文件描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-列出打开的文件描述符及关闭文件描述符"}},[t._v("#")]),t._v(" 6) 列出打开的文件描述符及关闭文件描述符")]),t._v(" "),s("p",[s("code",[t._v("lsof")]),t._v(" 命令会列出整个"),s("code",[t._v("Linux")]),t._v("系统打开的所有文件描述符。因为它会向非系统管理员用户提供"),s("code",[t._v("Linux")]),t._v("系统的信息，因此这是个功能颇有争议。该命令会产生大量的输出。它会显示当前"),s("code",[t._v("Linux")]),t._v("系统上打开的每个文件的有关信息。这包括后台运行的所有进程以及登录到系统的任何用户。")]),t._v(" "),s("p",[s("code",[t._v("lsof")]),t._v("支持大量的参数来筛选,最常用的如"),s("code",[t._v("-p")]),t._v("指定进程"),s("code",[t._v("ID")]),t._v("，"),s("code",[t._v("-d")]),t._v("指定要显示的文件描述符编号,"),s("code",[t._v("-u")]),t._v("指定用户名或用户"),s("code",[t._v("ID")]),t._v(","),s("code",[t._v("-a")]),t._v("选项用来对其他选项的结果执行布尔 "),s("code",[t._v("AND")]),t._v(" 运算。")]),t._v(" "),s("p",[t._v("要想知道进程的当前"),s("code",[t._v("PID")]),t._v("，可以用特殊环境变量 "),s("code",[t._v("$$")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$$")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 75485")]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v(",2 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" rob\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sh      75484  rob    0u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sh      75484  rob    1u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sh      75484  rob    2u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash    75485  rob    0u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash    75485  rob    1u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash    75485  rob    2u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lsof    97492  rob    0u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n")])])]),s("p",[t._v("执行，")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v(",2 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" rob "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$$")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash    75485  rob    0u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash    75485  rob    1u   CHR  136,3      0t0    6 /dev/pts/3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash    75485  rob    2u   CHR  136,3      0t0    6 /dev/pt")]),t._v("\n")])])]),s("p",[s("code",[t._v("lsof")]),t._v(" 的默认输出:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("列")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("COMMAND")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("正在运行的命令名的前9个字符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("PID")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("进程的PID")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("USER")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("进程属主的登录名")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("FD")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件描述符号以及访问类型（ r 代表读， w 代表写， u 代表读写）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("TYPE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件的类型（ CHR 代表字符型， BLK 代表块型， DIR 代表目录， REG 代表常规文件）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("DEVICE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设备的设备号（主设备号和从设备号）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("SIZE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果有的话，表示文件的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("NODE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("本地文件的节点号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("NAME")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件名")])])])]),t._v(" "),s("p",[t._v("有时候想阻止命令输出，可以将 "),s("code",[t._v("STDERR/STDOUT")]),t._v(" 重定向到一个叫作null文件的特殊文件，"),s("code",[t._v("null")]),t._v("文件跟它的名字很像，文件里什么都没有。"),s("code",[t._v("shell")]),t._v("输出到"),s("code",[t._v("null")]),t._v("文件的任何数据都不会保存，全部都被丢掉了。"),s("code",[t._v("Linux")]),t._v("系统上"),s("code",[t._v("null")]),t._v("文件的标准位置是"),s("code",[t._v("/dev/null")]),t._v("。重定向到该文件的数据都会被丢掉，不会显示。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-al")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null\n")])])]),s("p",[t._v("**使用这个重定向的情况一般有两种，一种是将脚本放到后台后不希望其再输出，另外一个用来快速清空文件"),s("br"),t._v("\n**")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" testfile\n")])])]),s("h2",{attrs:{id:"_7-输出同时发送到显示器和日志文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-输出同时发送到显示器和日志文件"}},[t._v("#")]),t._v(" 7)输出同时发送到显示器和日志文件")]),t._v(" "),s("p",[t._v("将输出同时发送到显示器和日志文件，不用将输出重定向两次，只要用特殊的 "),s("code",[t._v("tee")]),t._v(" 命令就行。"),s("code",[t._v("tee")]),t._v(" 命令相当于管道的一个T型接头。它将从 "),s("code",[t._v("STDIN")]),t._v(" 过来的数据同时发往两处。一处是"),s("code",[t._v("STDOUT")]),t._v(" ，另一处是 "),s("code",[t._v("tee")]),t._v(" 命令行所指定的文件名:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" testfile\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sun Oct 19 18:56:21 EDT 2014")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" testfile\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sun Oct 19 18:56:21 EDT 2014")]),t._v("\n")])])]),s("p",[t._v("默认情况下， "),s("code",[t._v("tee")]),t._v(" 命令会在每"),s("br"),t._v("\n次使用时覆盖输出文件内容。如果想将数据追加到文件中，必须用 "),s("code",[t._v("-a")]),t._v(" 选项。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" testfile\n")])])]),s("p",[t._v("不过，"),s("code",[t._v("tee")]),t._v("命令只能记录"),s("code",[t._v("STDOUT")]),t._v("不能记录"),s("code",[t._v("STDERR")]),t._v("，如果要显示的同时记录"),s("code",[t._v("STDERR")]),t._v("，需要自己手动实现，"),s("code",[t._v("linux")]),t._v("没有提供可以直接使用的命令。")]),t._v(" "),s("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);