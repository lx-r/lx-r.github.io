(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{509:function(s,a,t){"use strict";t.r(a);var n=t(17),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"shell循环while命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell循环while命令"}},[s._v("#")]),s._v(" "),a("code",[s._v("shell")]),s._v("循环"),a("code",[s._v("while")]),s._v("命令")]),s._v(" "),a("p",[a("code",[s._v("while")]),s._v("命令允许定义一个要测试的命令，然后循环执行一组命令，只要定义的测试命令返回的是退出状态码 0 。它会在每次迭代的一开始测试 test 命令。在 test 命令返回非零退出状态码时， while 命令会停止执行那组命令。")]),s._v(" "),a("p",[s._v("while 命令格式")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    other commands\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),a("p",[a("code",[s._v("while")]),s._v(" 命令中定义的 "),a("code",[s._v("test command")]),s._v(" 和 "),a("code",[s._v("if-then")]),s._v(" 语句中的格式一模一样。")]),s._v(" "),a("p",[s._v("最常见的 "),a("code",[s._v("test command")]),s._v(" 的用法是用方括号来检查循环命令中用到的"),a("code",[s._v("shell")]),s._v("变量的值。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-gt")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nu: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v('"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 1")]),s._v("\n")])])]),a("p",[a("code",[s._v("while")]),s._v(" 命令允许在 "),a("code",[s._v("while")]),s._v(" 语句行定义多个测试命令。只有最后一个测试命令的退出状态码"),a("br"),s._v("\n会被用来决定什么时候结束循环。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-gt")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nu: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v('"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nu")]),s._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nu: 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0")]),s._v("\n")])])]),a("p",[s._v("第一个测试简单地显示了 var1 变量的当前值。第二个测试用方括号来判断 var1 变量的值。"),a("br"),s._v("\n在循环内部， echo 语句会显示一条简单的消息，说明循环被执行了。运行本例时输出"),a("br"),s._v("\n以"),a("code",[s._v("0")]),s._v("结束,说明执行了"),a("code",[s._v("[ $nu -gt 0 ]")]),s._v("之前的"),a("code",[s._v("echo $nu")]),s._v("语句。")]),s._v(" "),a("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}})],1)}),[],!1,null,null,null);a.default=e.exports}}]);