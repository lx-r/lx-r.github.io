(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{570:function(a,e,s){"use strict";s.r(e);var t=s(17),v=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"使用dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile"}},[a._v("#")]),a._v(" 使用Dockerfile")]),a._v(" "),e("p",[e("code",[a._v("Dockerfile")]),a._v("是一个文本文件，其中包含了一些描述镜像构建细节的命令。")]),a._v(" "),e("p",[a._v("运行命令")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("91")]),a._v(":80 nginx\n")])])]),e("p",[a._v("先下载"),e("code",[a._v("nginx")]),a._v("镜像，然后如下演示一个最简单的使用"),e("code",[a._v("Dockerfile")]),a._v("的例子。使用如下"),e("code",[a._v("Dockerfile")]),a._v("可以修改镜像的首页。")]),a._v(" "),e("div",{staticClass:"language-Dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" nginx")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" echo "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<h1>Hello Docker</h1>'")]),a._v(" > /usr/share/nginx/html/index.html")]),a._v("\n\n")])])]),e("p",[a._v("文件中的"),e("code",[a._v("FROM/RUN")]),a._v("都是"),e("code",[a._v("Dockerfile")]),a._v("的命令。")]),a._v(" "),e("p",[e("code",[a._v("From")]),a._v("用于指定基础镜像，"),e("code",[a._v("RUN")]),a._v("用于执行命令。")]),a._v(" "),e("p",[a._v("在"),e("code",[a._v("Dockerfile")]),a._v("所在路径下执行")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" nginx:my "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Sending build context to Docker daemon  2.048kB")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Step 1/2 : FROM nginx")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  ---\x3e 448a08f1d2f9")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Step 2/2 : RUN echo '<h1>Hello Docker</h1>' > /usr/share/nginx/html/index.html")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  ---\x3e Running in 56cc7bd387df")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Removing intermediate container 56cc7bd387df")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  ---\x3e bbde20bd1613")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Successfully built bbde20bd1613")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Successfully tagged nginx:my")]),a._v("\n\n")])])]),e("p",[e("code",[a._v(".")]),a._v("表示的是路径传递参数，当前路径。")]),a._v(" "),e("p",[a._v("使用新"),e("code",[a._v("build")]),a._v("的镜像启动一个"),e("code",[a._v("Docker")]),a._v(",")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("92")]),a._v(":80 nginx:my\n")])])]),e("p",[a._v("修改之前访问"),e("code",[a._v("localhost:91")]),a._v("页面"),e("br"),a._v(" "),e("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/nginx.png",alt:""}})]),a._v(" "),e("p",[a._v("修改之后访问"),e("code",[a._v("localhost:92")]),a._v("页面")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/nginx2.png",alt:""}})]),a._v(" "),e("p",[a._v("可以看到仅仅通过几行代码就改变了镜像的行为。")]),a._v(" "),e("h2",{attrs:{id:"dockerfile中常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile中常用命令"}},[a._v("#")]),a._v(" Dockerfile中常用命令")]),a._v(" "),e("p",[e("code",[a._v("Dockerfile")]),a._v(" 功能很强大，它提供了十多个指令。")]),a._v(" "),e("h3",{attrs:{id:"copy复制文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy复制文件"}},[a._v("#")]),a._v(" COPY复制文件")]),a._v(" "),e("p",[a._v("格式：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("COPY [--chown=<user>:<group>] <源路径>... <目标路径>")])]),a._v(" "),e("li",[e("code",[a._v('COPY [--chown=<user>:<group>] ["<源路径1>",... "<目标路径>"]')])])]),a._v(" "),e("p",[a._v("有两种格式，一种类似于命令行，一种类似于函数调用。")]),a._v(" "),e("p",[e("code",[a._v("COPY")]),a._v(" 指令将从构建上下文目录中 "),e("code",[a._v("<源路径>")]),a._v(" 的文件/目录复制到新的一层的镜像内的 "),e("code",[a._v("<目标路径>")]),a._v("中，如")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("COPY package.json /usr/src/app/\n")])])]),e("p",[a._v("在使用该指令的时候还可以加上 "),e("code",[a._v("--chown=<user>:<group>")]),a._v(" 选项来改变文件的所属用户及所属组。")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("COPY "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--chown")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("55")]),a._v(":mygroup files* /mydir/\n")])])]),e("h3",{attrs:{id:"add复制文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add复制文件"}},[a._v("#")]),a._v(" ADD复制文件")]),a._v(" "),e("p",[a._v("格式：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("ADD <src>...<dest>")])]),a._v(" "),e("li",[e("code",[a._v('ADD ["<src>",...,"<dest>"]')])])]),a._v(" "),e("p",[e("code",[a._v("ADD")]),a._v("命令从"),e("code",[a._v("src")]),a._v("目录复制文件到容器的"),e("code",[a._v("dst")]),a._v("。其中,"),e("code",[a._v("src")]),a._v("可以是"),e("code",[a._v("Dockerfile")]),a._v("所在目录的相对路径，也可以是一个"),e("code",[a._v("URL")]),a._v("，还可以是压缩包。")]),a._v(" "),e("p",[a._v("如下命令使用"),e("code",[a._v("ADD")]),a._v("解压文件：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("ADD xxxx.tar.gz /\n")])])]),e("h3",{attrs:{id:"arg设置构建参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arg设置构建参数"}},[a._v("#")]),a._v(" ARG设置构建参数")]),a._v(" "),e("p",[e("code",[a._v("ARG")]),a._v("指令用于设置构建参数，类似"),e("code",[a._v("ENV")]),a._v("。和"),e("code",[a._v("ENV")]),a._v("不同的是，ARG设置的是构建时的环境变量，在容器运行时是不会存在这些变量的。")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("ARG <name>[=<default value>]")])])]),a._v(" "),e("p",[a._v("例如")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("ARG "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("user1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("xxx\n")])])]),e("h3",{attrs:{id:"cmd启动容器的命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd启动容器的命令"}},[a._v("#")]),a._v(" CMD启动容器的命令")]),a._v(" "),e("p",[a._v("Docker 不是虚拟机，容器就是进程，在启动容器的时候，需要指定所运行的程序及参数。CMD 指令就是用于指定默认的容器主进程的启动命令的。")]),a._v(" "),e("p",[a._v("每个"),e("code",[a._v("Dockerfile")]),a._v("只有一个"),e("code",[a._v("CMD")]),a._v("命令，如果指定多了"),e("code",[a._v("CMD")]),a._v("命令，只有最后一条会执行，如果启动容器时指定了容器的命令，则会覆盖"),e("code",[a._v("CMD")]),a._v("指定的命令。")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v('CMD ["executable", "param1", "param2"]')])]),a._v(" "),e("li",[e("code",[a._v('CMD ["param1", "param2"]')])]),a._v(" "),e("li",[e("code",[a._v("CMD command param1 param2")])])]),a._v(" "),e("p",[a._v("例如")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("CMD "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This is a tes"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" -\n")])])]),e("h3",{attrs:{id:"entrypoint入口点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint入口点"}},[a._v("#")]),a._v(" ENTRYPOINT入口点")]),a._v(" "),e("p",[e("code",[a._v("ENTRYPOINT")]),a._v(" 的目的和 "),e("code",[a._v("CMD")]),a._v(" 一样，都是在指定容器启动程序及参数。当指定了 "),e("code",[a._v("ENTRYPOINT")]),a._v(" 后，"),e("code",[a._v("CMD")]),a._v(" 的含义就发生了改变，不再是直接的运行其命令，而是将 "),e("code",[a._v("CMD")]),a._v(" 的内容作为参数传给 "),e("code",[a._v("ENTRYPOINT")]),a._v(" 指令。")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v('ENTRYPOINT ["executable", "param1", "param2"]')])]),a._v(" "),e("li",[e("code",[a._v("ENTRYPOINT command param1 param2")])])]),a._v(" "),e("h3",{attrs:{id:"env设置环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#env设置环境变量"}},[a._v("#")]),a._v(" ENV设置环境变量")]),a._v(" "),e("p",[e("code",[a._v("ENV")]),a._v("指令用于设置环境变量。")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("ENV <key> <value>")])]),a._v(" "),e("li",[e("code",[a._v("ENV <key>=<value>")])])]),a._v(" "),e("p",[a._v("例如")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("ENV JAVA_HOME /path/to/java \n")])])]),e("p",[a._v("后面的其它指令和运行时的应用，都可以直接使用这里定义的环境变量。")]),a._v(" "),e("h3",{attrs:{id:"expose声明暴露的端口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expose声明暴露的端口"}},[a._v("#")]),a._v(" EXPOSE声明暴露的端口")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("EXPOSE "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("端口"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("1")]),a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("端口"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[e("code",[a._v("EXPOSE")]),a._v(" 指令用于声明容器运行时提供服务的端口，这只是一个声明，在容器运行时并不会因为这个声明应用就会开启这个端口的服务。")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("Dockerfile")]),a._v(" 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 "),e("code",[a._v("docker run -P")]),a._v(" 时，会自动随机映射 "),e("code",[a._v("EXPOSE")]),a._v(" 的端口。")]),a._v(" "),e("p",[a._v("和在运行时使用 "),e("code",[a._v("-p <宿主端口>:<容器端口>")]),a._v("的区分，"),e("code",[a._v("-p")]),a._v("是映射宿主端口和容器端口，换句话说，就是将容器的对应端口服务公开给外界访问，而 "),e("code",[a._v("EXPOSE")]),a._v(" 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射。")]),a._v(" "),e("h3",{attrs:{id:"volume指定挂载点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volume指定挂载点"}},[a._v("#")]),a._v(" VOLUME指定挂载点")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("VOLUME <路径>")])])]),a._v(" "),e("p",[a._v("该命令使得容器中的一个目录具有持久化存储的功能，该目录可被容器本身使用，也可共享给其他容器。当容器中的应用有持久化数据的需要时可以在"),e("code",[a._v("Dockerfile")]),a._v("中使用该命令。")]),a._v(" "),e("p",[a._v("示例")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("VOLUME /data\n")])])]),e("h3",{attrs:{id:"from指定基础镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from指定基础镜像"}},[a._v("#")]),a._v(" FROM指定基础镜像")]),a._v(" "),e("p",[e("code",[a._v("FROM")]),a._v("指令指定基础镜像，有点类似面向对象中的继承关系，"),e("code",[a._v("FROM")]),a._v("指令必须指定且需要写在其他指令之前，"),e("code",[a._v("FROM")]),a._v("指令后的其他指令都依赖该指令所指向的对象。")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("FROM <image>")])]),a._v(" "),e("li",[e("code",[a._v("FROM <image>:<tag>")])]),a._v(" "),e("li",[e("code",[a._v("FROM <image>@<digest>")])])]),a._v(" "),e("h3",{attrs:{id:"label为镜像添加元数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#label为镜像添加元数据"}},[a._v("#")]),a._v(" LABEL为镜像添加元数据")]),a._v(" "),e("p",[e("code",[a._v("LABEL")]),a._v("命令用于为镜像添加元数据。")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("LABEL <key>=<value> <key>=<value>...")])])]),a._v(" "),e("p",[a._v("使用"),e("code",[a._v('"')]),a._v("和"),e("code",[a._v("\\")]),a._v("转换命令行。")]),a._v(" "),e("p",[a._v("示例")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("\nLABEL "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("version")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0"')]),a._v("\n\nLABEL "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("description")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This \\\ntext is a test."')]),a._v("\n")])])]),e("h3",{attrs:{id:"run执行命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run执行命令"}},[a._v("#")]),a._v(" RUN执行命令")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("RUN <command>")])]),a._v(" "),e("li",[e("code",[a._v('RUN ["executable", "param1", "param2"]')])])]),a._v(" "),e("p",[e("code",[a._v("RUN <command>")]),a._v("在"),e("code",[a._v("shell")]),a._v("终端中运行，在"),e("code",[a._v("linux")]),a._v("中默认是"),e("code",[a._v("/bin/sh -c")]),a._v(",使用这种格式就像是在终端中输入命令一样。")]),a._v(" "),e("h3",{attrs:{id:"workdir指定工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#workdir指定工作目录"}},[a._v("#")]),a._v(" WORKDIR指定工作目录")]),a._v(" "),e("p",[a._v("格式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("WORKDIR /path/to/workdir")])])]),a._v(" "),e("p",[a._v("切换到"),e("code",[a._v("workdir")]),a._v("路径的命令，类似"),e("code",[a._v("cd")]),a._v(",其后的命令都将会将此目录当作当前路径。")]),a._v(" "),e("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}}),a._v(" "),e("blockquote",[e("ul",[e("li",[e("a",{attrs:{href:"https://yeasy.gitbook.io/docker_practice/image/dockerfile/label",target:"_blank",rel:"noopener noreferrer"}},[a._v("1.https://yeasy.gitbook.io/docker_practice/image/dockerfile/label"),e("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);e.default=v.exports}}]);