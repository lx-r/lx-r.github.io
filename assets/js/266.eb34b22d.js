(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{582:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git工具子模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git工具子模块"}},[t._v("#")]),t._v(" GIT工具子模块")]),t._v(" "),s("h2",{attrs:{id:"子模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子模块"}},[t._v("#")]),t._v(" 子模块")]),t._v(" "),s("p",[t._v("某个工作中的项目需要包含并使用另一个项目如第三方库，或者你独立开发的，用于多个父项目的库，如何把它们当做两个独立的项目，同时又想在一个项目中使用另一个呢？")]),t._v(" "),s("p",[t._v("Git 通过子模块来解决这个问题。 子模块允许你将一个 Git 仓库作为另一个 Git 仓库的子目录。 它能让你将另一个仓库克隆到自己的项目中，同时还保持提交的独立。")]),t._v(" "),s("h2",{attrs:{id:"如何使用子模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用子模块"}},[t._v("#")]),t._v(" 如何使用子模块")]),t._v(" "),s("ul",[s("li",[t._v("向一个GIT仓库中添加另外一个GIT仓库作为第三方库")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" https://github.com/strasdat/Sophus.git 3rdparty\n")])])]),s("p",[t._v("将"),s("code",[t._v("Sophus")]),t._v("库添加到本仓库"),s("code",[t._v("3rdparty")]),t._v("文件中，执行上述命令后会在当前GIT仓库中自动生成"),s("code",[t._v(".gitmodules")]),t._v("文件。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .gitmodules 文件内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("submodule "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3rdparty/Sophus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 3rdparty/Sophus\n\turl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://github.com/strasdat/Sophus\n")])])]),s("p",[t._v("虽然 Sophus 是工作目录中的一个子目录，但 Git 还是会将它视作一个子模块。当你不在那个目录中时，Git 并不会跟踪它的内容， 而是将它看作子模块仓库中的某个具体的提交。")]),t._v(" "),s("ul",[s("li",[t._v("克隆含有子模块的项目")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone repository-url\n")])])]),s("p",[t._v("通过上述命令克隆的仓库，默认会包含该子模块目录，但其中还没有任何文件。")]),t._v(" "),s("p",[t._v("需要切换到子模块父目录路径下，执行")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update\n")])])]),s("p",[t._v("或使用另外一种更简单的方式，带子模块一起克隆")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recurse-submodules repository-url\n")])])]),s("h2",{attrs:{id:"更新子模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新子模块"}},[t._v("#")]),t._v(" 更新子模块")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-remote")]),t._v(" 3rdparty/submodule\n")])])]),s("h2",{attrs:{id:"查看使用commit-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看使用commit-id"}},[t._v("#")]),t._v(" 查看使用"),s("code",[t._v("commit id")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule status \n")])])]),s("h2",{attrs:{id:"提交主工程中对submodule的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交主工程中对submodule的修改"}},[t._v("#")]),t._v(" 提交主工程中对submodule的修改")]),t._v(" "),s("p",[s("code",[t._v("submoudle")]),t._v("本身就是"),s("code",[t._v("git")]),t._v("仓库，有"),s("code",[t._v(".git")]),t._v("文件，所以只需切入子模块中")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" third_party/spdlog\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" test.cpp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/\n")])])]),s("p",[t._v("提交后，需在"),s("code",[t._v("main project")]),t._v("中更新对应的子模块符号即可。")]),t._v(" "),s("h2",{attrs:{id:"删除main-project中已有的submoudle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除main-project中已有的submoudle"}},[t._v("#")]),t._v(" 删除"),s("code",[t._v("main project")]),t._v("中已有的"),s("code",[t._v("submoudle")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" path/to/submodule\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑.gitsubmodule文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" .gitmodules\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑.git/config文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" .git/config\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除submodule的Git缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v(" path/to/submodule\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Remove submodule: path/to/submodule"')]),t._v("\n\n")])])]),s("h3",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=r.exports}}]);