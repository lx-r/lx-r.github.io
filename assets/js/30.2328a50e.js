(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{348:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"findcontours函数解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findcontours函数解析"}},[t._v("#")]),t._v(" findContours函数解析")]),t._v(" "),s("h2",{attrs:{id:"_1-基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本用法"}},[t._v("#")]),t._v(" 1.基本用法")]),t._v(" "),s("p",[t._v("获取对象的轮廓，一般最好先对图像进行灰度化再进行阈值处理，然后用来检测轮廓。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n     InputOutputArray image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     OutputArrayOfArrays contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     OutputArray hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     Point offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("image: 8位单通道图像")]),t._v(" "),s("li",[t._v("contours: 检测到的轮廓，"),s("code",[t._v("vector<vector<cv::Point>>")])]),t._v(" "),s("li",[t._v("hierarchy: 检测到的轮廓之间的嵌套和邻近关系，"),s("code",[t._v("vector<cv::Vec4i>")])]),t._v(" "),s("li",[t._v("mode: 不同的轮廓检测算法，常用的有"),s("code",[t._v("RETR_EXTERNAL/RETR_LIST/RETR_CCOMP/RETR_TREE")]),s("a",{attrs:{href:"https://docs.opencv.org/3.4/d3/dc0/group__imgproc__shape.html#ga819779b9857cc2f8601e6526a3a5bc71",target:"_blank",rel:"noopener noreferrer"}},[t._v("四种"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("method: 轮廓逼近方法，"),s("a",{attrs:{href:"https://docs.opencv.org/3.4/d3/dc0/group__imgproc__shape.html#ga4303f45752694956374734a03c54d5ff",target:"_blank",rel:"noopener noreferrer"}},[t._v("见"),s("OutboundLink")],1),t._v("，可使用更少的点表示轮廓，减少内存占用。")]),t._v(" "),s("li",[t._v("offset: 轮廓点应该偏移的量，当在"),s("code",[t._v("roi")]),t._v("上提取轮廓后想还原到原图上时比较有用。")])]),t._v(" "),s("h2",{attrs:{id:"_2-轮廓提取模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-轮廓提取模式"}},[t._v("#")]),t._v(" 2.轮廓提取模式")]),t._v(" "),s("p",[t._v("第四个参数"),s("code",[t._v("mode")]),t._v(",可以选择不同的轮廓提取算法，常用的有"),s("code",[t._v("RETR_EXTERNAL/RETR_LIST/RETR_CCOMP/RETR_TREE")]),s("a",{attrs:{href:"https://docs.opencv.org/3.4/d3/dc0/group__imgproc__shape.html#ga819779b9857cc2f8601e6526a3a5bc71",target:"_blank",rel:"noopener noreferrer"}},[t._v("四种"),s("OutboundLink")],1),t._v("。下面分别进行介绍。在"),s("code",[t._v("findContours")]),t._v("函数中，其第3个参数"),s("code",[t._v("hierarchy")]),t._v("表示的轮廓之间的层级关系，对于不同"),s("code",[t._v("mode")]),t._v("的轮廓提取算法，其返回的值是不同的。如下图【来自于OpenCV Doc】：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/f1desc.jpg",alt:""}})]),t._v(" "),s("p",[t._v("图中不同的轮廓有层级嵌入关系，我们将外部的轮廓称为"),s("strong",[t._v("父")]),t._v("，内部的轮廓称为"),s("strong",[t._v("子")]),t._v("，"),s("code",[t._v("hierarchy")]),t._v("就是表示轮廓的父子和邻近关系的矩阵。上图中有"),s("code",[t._v("0/1/2/3/4/5/2a/3a")]),t._v(" 8 个轮廓，其中"),s("code",[t._v("0,1,2")]),t._v("是最外侧的轮廓，可记为它们在层级0"),s("code",[t._v("hierarchy-0")]),t._v("。而"),s("code",[t._v("2a")]),t._v("是轮廓"),s("code",[t._v("2")]),t._v("的子轮廓，记为其在层级1"),s("code",[t._v("hierarchy 1")]),t._v("。同样轮廓"),s("code",[t._v("3")]),t._v("是轮廓"),s("code",[t._v("2a")]),t._v("的子轮廓，记为其在层级2"),s("code",[t._v("hierarchy 2")]),t._v("。同样轮廓"),s("code",[t._v("3a")]),t._v("是轮廓"),s("code",[t._v("3")]),t._v("的子轮廓，记为其在层级3"),s("code",[t._v("hierarchy 3")]),t._v("。"),s("code",[t._v("4/5")]),t._v("是"),s("code",[t._v("3a")]),t._v("的子轮廓，其构成层级4"),s("code",[t._v("hierarchy 4")]),t._v("。 属于每个层的轮廓都有其自己的信息，如它的子轮廓是什么，父轮廓是什么，"),s("code",[t._v("OpenCV")]),t._v("通过一个四个元素的数组来表示每个轮廓与其他轮廓的关系，这个四维数组中的值分别表示**"),s("code",[t._v("[Next, Previous, First_Child, Parent]")]),s("strong",[t._v(", "),s("strong",[s("code",[t._v("Next")]),t._v("表示属于同一个层级"),s("code",[t._v("hierarchy")]),t._v("的下一个轮廓")]),t._v("，以上图轮廓"),s("code",[t._v("0")]),t._v("为例，"),s("code",[t._v("0,1,2")]),t._v("属于同个层级"),s("code",[t._v("hierarchy-0")]),t._v("的轮廓，因此"),s("code",[t._v("0")]),t._v("的"),s("code",[t._v("Next")]),t._v("是"),s("code",[t._v("1")]),t._v(","),s("code",[t._v("1")]),t._v("的"),s("code",[t._v("Next")]),t._v("是"),s("code",[t._v("2")]),t._v("。同一个层级中轮廓"),s("code",[t._v("2")]),t._v("已经是最后一个了，因此其"),s("code",[t._v("Next")]),t._v("是"),s("code",[t._v("-1")]),t._v("。同样对于上图的轮廓"),s("code",[t._v("4")]),t._v("，与其同属于层级4"),s("code",[t._v("hierarchy-4")]),t._v("的轮廓是"),s("code",[t._v("5")]),t._v(",因此"),s("code",[t._v("4")]),t._v("的"),s("code",[t._v("Next=5")]),t._v(",而"),s("code",[t._v("5")]),t._v("的"),s("code",[t._v("Next=-1")]),t._v("。")]),s("code",[t._v("Previous")]),t._v("表示同一层级中之前的的那个轮廓**，如上图，"),s("code",[t._v("1")]),t._v("的"),s("code",[t._v("Previous=0")]),t._v(", "),s("code",[t._v("2")]),t._v("的"),s("code",[t._v("Previous=1")]),t._v(","),s("code",[t._v("0")]),t._v("的"),s("code",[t._v("Previous=-1")]),t._v("。"),s("strong",[s("code",[t._v("First_Child")]),t._v("表示当前轮廓的第一个子轮廓")]),t._v("，如上图，"),s("code",[t._v("0")]),t._v("的"),s("code",[t._v("First_Child=-1")]),t._v(","),s("code",[t._v("2")]),t._v("的"),s("code",[t._v("First_Child=2a")]),t._v(","),s("code",[t._v("3a")]),t._v("的"),s("code",[t._v("First_Child=4")]),t._v("。"),s("strong",[s("code",[t._v("Parent")]),t._v("表示当前轮廓的父轮廓")]),t._v("，如上图，"),s("code",[t._v("4")]),t._v("和"),s("code",[t._v("5")]),t._v("的父轮廓都是"),s("code",[t._v("3a")]),t._v("，"),s("code",[t._v("3a")]),t._v("的父轮廓是"),s("code",[t._v("3")]),t._v(","),s("code",[t._v("3")]),t._v("的父轮廓是"),s("code",[t._v("2a")]),t._v(","),s("code",[t._v("2")]),t._v("的"),s("code",[t._v("Parent=-1")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("findContours")]),t._v("方法中的"),s("code",[t._v("mode")]),t._v("参数会返回不同的"),s("code",[t._v("hierarchy")]),t._v("信息，因为有些算法会找出轮廓间的嵌套和邻近关系，有些则只是把轮廓找出来而不会解析轮廓之间的信息。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-retr-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-retr-list"}},[t._v("#")]),t._v(" 2.1 RETR_LIST")]),t._v(" "),s("p",[s("code",[t._v("RETR_LIST")]),t._v("算法只会返回轮廓信息，而没有轮廓间的嵌套信息。因此，所有的轮廓都属于同个层级"),s("code",[t._v("hierarchy")]),t._v("没有父子关系, "),s("code",[t._v("hierarchy")]),t._v("返回值中只有"),s("code",[t._v("Next")]),t._v("和"),s("code",[t._v("Previous")]),t._v("，"),s("code",[t._v("Parent")]),t._v("和"),s("code",[t._v("First_Child")]),t._v("都为"),s("code",[t._v("-1")]),t._v("。四维数组的第3和第4个元素都是"),s("code",[t._v("-1")]),t._v("。如上图运行"),s("code",[t._v("findContours")]),t._v("后的输出：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RETR_LIST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CHAIN_APPROX_SIMPLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hierarchy\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1, -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("这里的"),s("code",[t._v("0/1/2/3/4/5/6/7")]),t._v("对应的是轮廓在"),s("code",[t._v("contours")]),t._v("中的下标。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-retr-external"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-retr-external"}},[t._v("#")]),t._v(" 2.2 RETR_EXTERNAL")]),t._v(" "),s("p",[s("code",[t._v("RETR_EXTERNAL")]),t._v("算法，只会返回最外侧的轮廓信息，所有的子轮廓都不会返回，如上图，使用"),s("code",[t._v("RETR_EXTERNAL")]),t._v("算法将只会返回"),s("code",[t._v("hierarchy-0")]),t._v("层级"),s("code",[t._v("0")]),t._v("的3个轮廓。当然"),s("code",[t._v("hierarchy")]),t._v("中也只有"),s("code",[t._v("3")]),t._v("个轮廓之间的邻近信息，"),s("code",[t._v("Parent")]),t._v("和"),s("code",[t._v("First_Child")]),t._v("依然都为"),s("code",[t._v("-1")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/f22contours.jpg",alt:""}})]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RETR_EXTERNAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CHAIN_APPROX_SIMPLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1, -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-3-retr-ccomp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-retr-ccomp"}},[t._v("#")]),t._v(" 2.3 RETR_CCOMP")]),t._v(" "),s("p",[s("code",[t._v("RETR_CCOMP")]),t._v("算法会找到图中所有的轮廓，但只会将轮廓组织成两层"),s("code",[t._v("hierarchy=2")]),t._v("。物体的外轮廓属于"),s("code",[t._v("hierarchy-0")]),t._v("，内轮廓属于"),s("code",[t._v("hierarchy-1")]),t._v(",如上图"),s("code",[t._v("0/1/2/3/4/5")]),t._v("都属于"),s("code",[t._v("hierarchy-0")]),t._v("，而"),s("code",[t._v("2a/3a")]),t._v("属于"),s("code",[t._v("hierarchy-1")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RETR_CCOMP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CHAIN_APPROX_SIMPLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1, -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1, -1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1, -1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("值得注意的是对于轮廓"),s("code",[t._v("2a")]),t._v("和"),s("code",[t._v("3a")]),t._v("，其"),s("code",[t._v("hierarchy")]),t._v("分别是"),s("code",[t._v("[-1, -1, -1, 2]")]),t._v("和"),s("code",[t._v("[-1, -1, -1, 4]")]),t._v("。这是因为"),s("code",[t._v("2a")]),t._v("和"),s("code",[t._v("3a")]),t._v("虽然属于"),s("code",[t._v("hierarchy-1")]),t._v("，但中间还隔着轮廓"),s("code",[t._v("3")]),t._v("，因此"),s("code",[t._v("2a")]),t._v("和"),s("code",[t._v("3a")]),t._v("之间没有邻近关系。")]),t._v(" "),s("p",[t._v("再来看个例子，如下图：【来自于OpenCV Doc】")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/ccomp_hierarchy.jpg",alt:""}})]),t._v(" "),s("p",[t._v("轮廓"),s("code",[t._v("0")]),t._v("是外轮廓，"),s("code",[t._v("1")]),t._v("和"),s("code",[t._v("2")]),t._v("分别是轮廓"),s("code",[t._v("0")]),t._v("所围成物体的内轮廓，"),s("code",[t._v("4")]),t._v("属于内轮廓，"),s("code",[t._v("3")]),t._v("属于外轮廓，"),s("code",[t._v("6")]),t._v("属于内轮廓,"),s("code",[t._v("5")]),t._v("属于外轮廓，"),s("code",[t._v("7")]),t._v("和"),s("code",[t._v("8")]),t._v("也都属于外轮廓。对于轮廓"),s("code",[t._v("0")]),t._v("其属于"),s("code",[t._v("hierarchy-1")]),t._v(",两个内轮廓"),s("code",[t._v("1")]),t._v("和"),s("code",[t._v("2")]),t._v("属于"),s("code",[t._v("hierarchy-2")]),t._v("。故对于轮廓"),s("code",[t._v("0")]),t._v(",其"),s("code",[t._v("Next=3")]),t._v(",同个层级"),s("code",[t._v("hierarchy level")]),t._v("的下一个，"),s("code",[t._v("previous=-1")]),t._v(",‵First-Child=1"),s("code",[t._v(",故轮廓")]),t._v("0"),s("code",[t._v("的")]),t._v("hierarchy=[3,-1, 1, -1]`。")]),t._v(" "),s("p",[t._v("轮廓"),s("code",[t._v("1")]),t._v("属于层级"),s("code",[t._v("2")]),t._v("，"),s("code",[t._v("hierarchy-2")]),t._v(",其同一层级的下一个(与"),s("code",[t._v("1")]),t._v("在同个父外轮廓中)轮廓是"),s("code",[t._v("2")]),t._v(",其他均为"),s("code",[t._v("-1")]),t._v("，因此轮廓"),s("code",[t._v("1")]),t._v("的"),s("code",[t._v("hierarchy=[2, -1, -1, 0]")]),t._v("。")]),t._v(" "),s("p",[t._v("轮廓"),s("code",[t._v("2")]),t._v("属于层级"),s("code",[t._v("2")]),t._v("，"),s("code",[t._v("hierarchy-2")]),t._v(",其前一个轮廓是同个父外轮廓下的"),s("code",[t._v("1")]),t._v(",其余为"),s("code",[t._v("-1")]),t._v("，因此轮廓"),s("code",[t._v("2")]),t._v("的"),s("code",[t._v("hierarchy=[-1, 1, -1, 0]")]),t._v("。")]),t._v(" "),s("p",[t._v("轮廓"),s("code",[t._v("3")]),t._v("在"),s("code",[t._v("hierarchy-1")]),t._v("中的"),s("code",[t._v("Next=5,Previous=0,First-Child=4，Parent=-1")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hierarchy\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", -1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-4-retr-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-retr-tree"}},[t._v("#")]),t._v(" 2.4 RETR_TREE")]),t._v(" "),s("p",[s("code",[t._v("RETR_TREE")]),t._v("算法提取所有的轮廓，并返回所有轮廓之间的嵌套关系。如上图，使用"),s("code",[t._v("RETR_TREE")]),t._v("得到的轮廓"),s("code",[t._v("hierarchy")]),t._v("之间的关系为：【来自于OpenCV Doc】括号中的绿色字表示轮廓所属的层级"),s("code",[t._v("hierarchy")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/tree_hierarchy.jpg",alt:""}})]),t._v(" "),s("p",[t._v("以轮廓"),s("code",[t._v("0")]),t._v("为例，其属于"),s("code",[t._v("hierarchy-0")]),t._v(",‵Next=7, Previous=-1, First_Child=1, Parent=-1`。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hierarchy\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", -1, -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", -1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(",  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[s("img",{attrs:{src:"https://day-pic-1311699660.cos.ap-nanjing.myqcloud.com/image/hole-hierarchy.jpg",alt:""}})]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RETR_CCOMP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CHAIN_APPROX_SIMPLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", -1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", -1, -1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", -1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, -1, -1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-1, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(", -1, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-测试代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-测试代码"}},[t._v("#")]),t._v(" 3.测试代码")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<opencv2/opencv.hpp>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<common.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RNG "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rng")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Usage: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("String img_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/images/OpenCV/2findContours/hole-hierarchy.png"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Mat image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("imread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img_dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("IMREAD_GRAYSCALE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vec4i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Point"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RETR_CCOMP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CHAIN_APPROX_SIMPLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cvtColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("COLOR_GRAY2BGR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Contours Size: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Scalar clr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scalar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rng"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rng"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rng"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawContours")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contours"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" hierarchy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("channels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("imwrite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"contours.png"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("imshow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Img"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cv"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("s\n")])])]),s("InArticleAdsense",{attrs:{"data-ad-client":"ca-pub-8685746128991385","data-ad-slot":"2974191661"}}),t._v(" "),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("a",{attrs:{href:"https://docs.opencv.org/4.x/d9/d8b/tutorial_py_contours_hierarchy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.https://docs.opencv.org/4.x/d9/d8b/tutorial_py_contours_hierarchy.html"),s("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);